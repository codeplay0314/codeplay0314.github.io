<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CODEPLAY0314</title>
  
  
  <link href="http://codeplay0314.com/atom.xml" rel="self"/>
  
  <link href="http://codeplay0314.com/"/>
  <updated>2022-05-17T20:00:00.000Z</updated>
  <id>http://codeplay0314.com/</id>
  
  <author>
    <name>Codeplay0314</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>离开上海</title>
    <link href="http://codeplay0314.com/articles/2022-06-20/tickets-of-4-years/"/>
    <id>http://codeplay0314.com/articles/2022-06-20/tickets-of-4-years/</id>
    <published>2022-06-20T20:00:00.000Z</published>
    <updated>2022-05-17T20:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天是封校第100天，清点宿舍准备离程。</p><p>我一直有保存票据的习惯，无论是电影票，演出票，还是门票，车票，都收在了抽屉里，成为我的部份存在。这些票的意义和拍立得是类似的：数字时代的一些实体回忆。</p><p>票上的墨迹会随着时间变淡，每一张最后都浓缩成脑海里的一个印象，或者一种感觉。但大学四年（准确来说只有前两年）的所有路途上的记忆，都坍缩成了一个点，一种已经模糊的印象，一种不再熟悉的感觉。</p><p>这个感觉大多是源于上海的，是微醺的巨鹿路，深夜的武康路，狭长的乌鲁木齐中路，万圣节的淮海路…和朋友在梧桐叶昏黄路灯下流离，在live house震耳欲聋音响下目眩，这些似乎都没有一个圆满的结局，生活戛然停止在了不合适的位置。</p><p>如果四年是一张票根，它的副券被撕下了一半，就没有了后续。上海是我的第二个城市，是一个最后没有收尾的城市</p><blockquote><p>「預計不再相見 過不到這試驗<br>瘟疫正在蔓延 誰有露台表演」</p></blockquote><p>上海，再会，希望别处也有上海！</p>]]></content>
    
    
    <summary type="html">Farewell Shanghai!</summary>
    
    
    
    <category term="Dairy" scheme="http://codeplay0314.com/categories/Dairy/"/>
    
    
    <category term="随记" scheme="http://codeplay0314.com/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>解封第一日</title>
    <link href="http://codeplay0314.com/articles/2022-05-07/first-day-of-reopening/"/>
    <id>http://codeplay0314.com/articles/2022-05-07/first-day-of-reopening/</id>
    <published>2022-05-17T20:00:00.000Z</published>
    <updated>2022-05-17T20:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天是因为上海疫情学校封校的第56天，3月13日生日前一天限制校区间流动，4月3日学校出现第一例阳性不能出楼宇，4月23日楼内第一例阳性不能出宿舍，一直到今天解除了不能出楼的规定，每两天有1个小时的楼周围放风时间。</p><p><img src="/image/posts/first-day-of-reopening/1.jpg" alt=""></p><p>其实这段时间心理状态还比较稳定，也并不觉得自己一定需要出门放风。但直到阳光带来的温度真实地灼烧衣服，才意识到这种感觉也会令人愉悦。运动场的死寂被不断的击球声打破，滑板咕噜咕噜在不大的区域穿行，草地三三两两挤满了围坐的人。</p><p><img src="/image/posts/first-day-of-reopening/2.jpg" alt=""></p><p>倘若没有疫情，没有人会在这个时间点不在教师而顶着烈日在校园一圈一圈游走，没有人会在匆忙赶路时为一朵新绽开的雏菊驻足，没有人会在校园每一隅给无奇的景观而不是跑去城市其他地方摄影。我也不会意识到，被切断了与自然世界的联系，才会觉得每次接触是如此偶然。结束之后回去路上便想，想必监狱生活就是这样的感觉。</p><p><img src="/image/posts/first-day-of-reopening/3.jpg" alt=""></p><p>其实也没有说这次经历给我带来多少改变，如果真的要有什么的话，那便是人类社会中所有的便利都是之前所有努力的积淀，人当然会是向前发展的，但这当然也不是理所应当的。</p>]]></content>
    
    
    <summary type="html">上海疫情封校第56天</summary>
    
    
    
    <category term="Dairy" scheme="http://codeplay0314.com/categories/Dairy/"/>
    
    
    <category term="随记" scheme="http://codeplay0314.com/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Fall 2022 &amp; Spring 2023 美国CS硕士申请</title>
    <link href="http://codeplay0314.com/articles/2022-04-15/ms-application/"/>
    <id>http://codeplay0314.com/articles/2022-04-15/ms-application/</id>
    <published>2022-04-15T19:00:00.000Z</published>
    <updated>2022-10-03T03:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>申请季基本结束了，这个过程和结果和预期的完全没有任何相似的地方。</p><p>先说结果，Fall’22申请了11所学校15个项目，基本都是MSCS及相关项目，最后1 <font color=green>admission</font>, 1 <font color=orange>waitlist</font>, 13 <font color=red>rejections</font>。</p><p><strong>[Oct. 2 Update]</strong> Spring’23 重新申请了MSIN@CMU，被录取了！感谢CMU，感谢INI，感谢Jennifer。历史大半年的申请季终于超级圆满的结束了~</p><h2 id="BG">BG</h2><p>陆本（众多top3中给分最烂的那个），3.2 109(S25) 326(3.5)，奖学金若干，ACM金若干，pub共一一篇，两段大厂SDE/MLE实习共计一年</p><p>找工向，排名敏感，费用和loc不敏感</p><h2 id="申请结果">申请结果</h2><p>按 <strong>申请前</strong> 预估的bar（轻喷）分</p><h3 id="彩票">彩票</h3><ul><li><font color=red>MS CIS@UPenn</font> （Dream school，实习leader之前读的项目，本来不了解，但一直跟我说要吹UPenn，加上有Alumni的推荐信就申了，但非高三维就是送钱）</li><li><font color=orange>MSIN@CMU</font> （没想到能waitlist，后来分析了原因，放在之后的版面）<strong>5.7更新：WL-&gt;Rej</strong></li><li><font color=red>MCS@UIUC</font> （申请前地里帖子消息说基本不招陆本，就业数据好，bar高，想着买彩票，但今年出现扩招情况，bar跟MCS@Rice持平(?)，但还是没中奖）</li><li><font color=red>MSCS@Columbia</font> （听说人多又水，当然只是申请季前的看法）</li></ul><h3 id="主申">主申</h3><ul><li><font color=green>MSSE-SV@CMU (deferred to Spring 2023)</font> （n连拒之后的救命稻草。听我说，谢谢你，因为有你，温暖了四季）</li><li><font color=red>MSCS@Duke</font> （导师原来是Duke教过书，以为有优势，没想到这个项目这么小，有眼不识泰山…）</li><li><font color=red>MSCS@UCSD</font> （今年缩招）</li><li><font color=red>MCS@Rice</font> （bar越来越高了）</li></ul><h3 id="保底">保底</h3><ul><li><font color=red>MEng CS@Cornell Tech</font> （一年项目，以为能保底）</li><li><font color=red>{MSCS, MSCS-AI, MSCS-DS}@USC</font> （所有人都跟我说能保底，但没人说过硬卡gpa啊…纯纯是做慈善）</li><li><font color=red>MSCS@NYU {Courant, Tandon}</font> （bar越来越高了，tandon劝转applied urban science）</li><li><font color=red>MCS@UCI</font> （bar越来越高了）</li></ul><h3 id="其他想申但是因为推荐信数量limited没申的">其他想申但是因为推荐信数量limited没申的</h3><ul><li>彩票类（Stanford, UCB, UMich, UMass, Cornell）</li><li>主申类（JHU, UChi, Northwest, Brown）</li></ul><h2 id="这个申请季犯的错">这个申请季犯的错</h2><ul><li><strong>眼高手低，严重低估GPA在申请中的作用</strong>。由于是头部985+软背景还不错，于是选校及其激进，而且也不舍得放低身段了解排名靠后的学校（甚至是NEU，BU这种），导致几乎全聚德的局面。当然，到后期等不到ad的时候已经悔不当初，差点加申了。</li><li><strong>没有对各个program仔细地研究</strong>。片面的只了解部分MSCS项目，而且只通过自己对学校的印象和网上只言片语的评价选，没有考虑ma不match以及每个项目的特殊性（招工数据、卡GPA、招生人数、陆本bar、名校友好…）。事实上，申请季快结束的时候我才了解到一些对我本科友好的一些学校：JHU和UChi。SE-SV是实习leader告诉我的，不然真的会面临失学。这个是很多独立申请的人都会犯的错，建议是可以加一些申请群看下别人的讨论。</li><li><strong>信息滞后</strong>。今年一些项目的bar上涨的速度超过了预期，甚至20、21年的dp都已不适用，传统的保底校已经不再能保底。但是感觉这个也没法预期，很多人也没料到这种情况。从我上面的项目分级就可以看出有多么搞笑。</li><li><strong>中介服务不到位</strong>。也不算犯了错，但是花了5W觉得没有享受到等值服务，无非就是害怕信息差，但最终中介也没有提供有价值的信息，都是自己了解到的。就是给你填填申请表（但大部分都是我亲自填的），文书基本也是我自己重新洗了再拿到Fiverr改，整套服务感觉价值不到5000。</li></ul><h2 id="申请CMU的经验">申请CMU的经验</h2><ul><li>三围似乎真的不如其他学校重要</li><li>文书很重要。MSIN和MSSE-SV都有小作文，我MSIN的5个问题几乎花了一整天，我觉得没有被直接拒很大一部分原因是这部分写的比较好</li><li>match程度很重要。建议从项目主页上找信息看如何写满足项目的要求，比如MSIN我着重强调了system的经验和business insights</li><li>可能比较看重工作/实习经验。这是以往的经验，招了很多2+年工作经验的，放在我的case也是符合的</li><li>分享一下MSSE-SV的小作文</li></ul><blockquote><p>Demonstrate an understanding of what software engineering is, your familiarity with the specific goals of the program, and your interest in the program’s content.</p><p>Please limit text to no more than 300 words</p><hr><p>Software engineering, for me, is the process of designing, developing, testing, experimenting, maintaining and iterating large-scale functional programs. My understanding of software engineering largely comes from my intern experiences, especially at Bilibili, where I supported its recommender system. It is not difficult for me to develop separate modules in a simple course project owing to my 7-year programming contest experience. However, I had never fathomed that developing under industrial guidelines was far more complex.</p><p>There are several significant elements contributing to the success of a software project. To understand the user or client requirements and organize the development process is essential to cultivate valuable outputs in the first place. Practice methodology also plays an important role in software engineering. For instance, adopting the SCRUM framework can exploit the team’s ability to respond to emerging requirements and deliver quickly. Industrialization is also an aspect that should not be neglected: Data, AI middle office can significantly leverage the developing efficiency. Even making a simple tool by yourself sometimes can help avoid lots of dirty work. What is more, requirement review, code style, documentation, etc., contribute to software engineering in different ways as well.</p><p>The sophisticated nature of software engineering has really fascinated me. It requires not only technical skills but also a deep understanding of ultimate goals, practice methodology, architecture designing, cooperation and so on. Only who mastering all these skills can be a good software engineer and make successful products. I really wish to go further in this field in the future. Therefore, I am particularly attracted to the Master of Science in Software Engineering program at College of Engineering, Carnegie Mellon University, which will definitely consolidate and build upon my ability to solve real-world problems and strengthen my practice skills, and will play a significant role in my long-term future as I seek to build influential products to help understand and improve our society, and achieve success in my career.</p></blockquote><p>虽然过程比较煎熬，但这个结果最后看起来也非常不错了（录得多不如录得巧）。根据@Flash的电子云理论和倒三角选校（ref: <a href="https://www.1point3acres.com/bbs/thread-883934-1-1.html">https://www.1point3acres.com/bbs/thread-883934-1-1.html</a> ），我能拿到还不错的结果应该也是all in彩票的一个极端长底短高的三角。</p>]]></content>
    
    
    <summary type="html">低空上岸记录</summary>
    
    
    
    <category term="Summary" scheme="http://codeplay0314.com/categories/Summary/"/>
    
    
    <category term="美硕申请" scheme="http://codeplay0314.com/tags/%E7%BE%8E%E7%A1%95%E7%94%B3%E8%AF%B7/"/>
    
    <category term="CS" scheme="http://codeplay0314.com/tags/CS/"/>
    
    <category term="Fall 2022" scheme="http://codeplay0314.com/tags/Fall-2022/"/>
    
  </entry>
  
  <entry>
    <title>Hello World 2.0</title>
    <link href="http://codeplay0314.com/articles/2020-05-20/hello-world/"/>
    <id>http://codeplay0314.com/articles/2020-05-20/hello-world/</id>
    <published>2020-05-21T02:00:00.000Z</published>
    <updated>2020-05-21T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>近期才有了重建博客的想法。</p><p>这个博客始建于2015年，当时整个机房都在见博客，于是我也跟风摸了一个来记录一些题解和想法，退役后就弃置了。</p><p>上个月想回访一下，结果发下原网站已经被黑掉了，由于高中用的电脑报废原始的博客仓库也找不到了。但幸亏还有一些html文件，留下了一下原来的痕迹，可以作为重建的砖板。之前写的篇数也不少，只能手动一篇篇恢复，另外加上一些后来写的东西。但我是一个极其拖延的人，重建过程可能会持续很久。</p><p>这个过程让我自然联想到今天马哲课讲的一个有趣的哲学问题：每一块坏掉的木板都被替换成新木板的忒修斯之船还是原来的忒修斯之船吗？无论怎样，希望能在这里记录一些生活中最重要的部分。</p><p>Hello World!<br>May 20, 2020</p>]]></content>
    
    
    <summary type="html">博客重建工程</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>高中毕业相册</title>
    <link href="http://codeplay0314.com/articles/2018-07-24/graduation-album/"/>
    <id>http://codeplay0314.com/articles/2018-07-24/graduation-album/</id>
    <published>2018-07-24T04:00:00.000Z</published>
    <updated>2018-07-24T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/image/posts/graduation-album/cover.jpg" alt=""></p><p><img src="/image/posts/graduation-album/1-2.jpg" alt=""></p><p><img src="/image/posts/graduation-album/5-6.jpg" alt=""></p><p><img src="/image/posts/graduation-album/7-8.jpg" alt=""></p><p><img src="/image/posts/graduation-album/9-10.jpg" alt=""></p><p><img src="/image/posts/graduation-album/11-12.jpg" alt=""></p><p><img src="/image/posts/graduation-album/13-14.jpg" alt=""></p><p><img src="/image/posts/graduation-album/15-16.jpg" alt=""></p><p><img src="/image/posts/graduation-album/17-18.jpg" alt=""></p><p><img src="/image/posts/graduation-album/19-20.jpg" alt=""></p><p><img src="/image/posts/graduation-album/21-22.jpg" alt=""></p><p><img src="/image/posts/graduation-album/23-24.jpg" alt=""></p><p><img src="/image/posts/graduation-album/25-26.jpg" alt=""></p><p><img src="/image/posts/graduation-album/43-44.jpg" alt=""></p><p><img src="/image/posts/graduation-album/49-50.jpg" alt=""></p><p><img src="/image/posts/graduation-album/backcover.jpg" alt=""></p>          </div>]]></content>
    
    
    <summary type="html">工时80+h制作完成。由于个人隐私问题，仅释出Chapter 1 校园部分</summary>
    
    
    
    <category term="photos" scheme="http://codeplay0314.com/categories/photos/"/>
    
    
    <category term="photos" scheme="http://codeplay0314.com/tags/photos/"/>
    
  </entry>
  
  <entry>
    <title>出题 | SIMPLE OR NAIVE</title>
    <link href="http://codeplay0314.com/articles/2015-10-23/Simple-or-Naive/"/>
    <id>http://codeplay0314.com/articles/2015-10-23/Simple-or-Naive/</id>
    <published>2015-10-23T04:00:00.000Z</published>
    <updated>2015-10-23T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>考试包下载 &gt;&gt; <a href="/files/Simple-or-Naive.rar">《Simple or Naive》</a></p><h1>Simple or Naive - that is the question</h1><h2 id="一、题目概况">一、题目概况</h2><table><thead><tr><th style="text-align:left">中文题目名称</th><th style="text-align:center">折线</th><th style="text-align:center">链表</th><th style="text-align:center">最小直径生成树</th></tr></thead><tbody><tr><td style="text-align:left">英文题目与子目录名</td><td style="text-align:center">polyline</td><td style="text-align:center">chain</td><td style="text-align:center">mdst</td></tr><tr><td style="text-align:left">可执行文件名</td><td style="text-align:center">polyline</td><td style="text-align:center">chain</td><td style="text-align:center">mdst</td></tr><tr><td style="text-align:left">输入文件名</td><td style="text-align:center"><null>polyline.in</null></td><td style="text-align:center"><null>chain.in</null></td><td style="text-align:center"><null>mdst.in</null></td></tr><tr><td style="text-align:left">输出文件名</td><td style="text-align:center">polyline.out</td><td style="text-align:center">chain.out</td><td style="text-align:center">mdst.out</td></tr><tr><td style="text-align:left">每个测试点时限</td><td style="text-align:center">1s</td><td style="text-align:center">1s</td><td style="text-align:center">1s</td></tr><tr><td style="text-align:left">测试点数目</td><td style="text-align:center">10</td><td style="text-align:center">10</td><td style="text-align:center">10</td></tr><tr><td style="text-align:left">每个测试点分值</td><td style="text-align:center">10</td><td style="text-align:center">10</td><td style="text-align:center">10</td></tr><tr><td style="text-align:left">结果比较方式</td><td style="text-align:center">全文比较</td><td style="text-align:center">SPJ</td><td style="text-align:center">全文比较</td></tr><tr><td style="text-align:left">题目类型</td><td style="text-align:center">传统</td><td style="text-align:center">传统</td><td style="text-align:center">传统</td></tr><tr><td style="text-align:left">运行内存上限</td><td style="text-align:center">128M</td><td style="text-align:center">128M</td><td style="text-align:center">128M</td></tr><tr><td style="text-align:left">题目来源</td><td style="text-align:center">Codeforces</td><td style="text-align:center">原创</td><td style="text-align:center">ZOJ</td></tr></tbody></table><h2 id="二、提交源程序文件名">二、提交源程序文件名</h2><table><thead><tr><th style="text-align:left">对于C++语言</th><th style="text-align:center">polyline.cpp</th><th style="text-align:center">chain.cpp</th><th style="text-align:center">mdst.cpp</th></tr></thead><tbody><tr><td style="text-align:left">对于C语言</td><td style="text-align:center">polyline.c</td><td style="text-align:center">chain.c</td><td style="text-align:center">mdst.c</td></tr><tr><td style="text-align:left">对于pascal语言</td><td style="text-align:center">polyline.pas</td><td style="text-align:center">chain.pas</td><td style="text-align:center">mdst.pas</td></tr></tbody></table><h2 id="三、编译命令（不包含任何优化开关）">三、编译命令（不包含任何优化开关）</h2><table><thead><tr><th style="text-align:left">对于C++语言</th><th style="text-align:center">g++ -o polyline polyline.cpp -lm</th><th style="text-align:center">g++ -o chain chain.cpp -lm</th><th style="text-align:center">g++ -omdst mdst.cpp -lm</th></tr></thead><tbody><tr><td style="text-align:left">对于C语言</td><td style="text-align:center">gcc -o polyline polyline.c -lm</td><td style="text-align:center">gcc -o chain chain.c -lm</td><td style="text-align:center">gcc -o mdst mdst.c -lmc</td></tr><tr><td style="text-align:left">对于pascal语言</td><td style="text-align:center">fpc polyline.pas</td><td style="text-align:center">fpc chain.pas</td><td style="text-align:center">fpc mdst.pas</td></tr></tbody></table><h2 id="四、注意事项">四、注意事项</h2><p>1、文件名（程序名和输入输出文件名）必须使用英文小写。</p><p>2、C/C++中函数main()的返回值类型必须是int，程序正常结束时的返回值必须是0。</p><p>3、知识点保证都在NOIP范围内！</p><h2 id="五、题面">五、题面</h2><h3 id="1-折线-polyline-cpp-c-pas">1.折线 (polyline.cpp/c/pas)</h3><h4 id="Description-17">[Description]</h4><p>二维坐标平面上，我们称一条折线是畸形的，当且仅当它依次经过如下坐标:</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo>−</mo><mo>&gt;</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo stretchy="false">)</mo><mtext>–</mtext><mo>&gt;</mo><mo stretchy="false">(</mo><mn>2</mn><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mn>0</mn><mo stretchy="false">)</mo><mtext>–</mtext><mo>&gt;</mo><mo stretchy="false">(</mo><mn>3</mn><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo stretchy="false">)</mo><mtext>–</mtext><mo>&gt;</mo><mo stretchy="false">(</mo><mn>4</mn><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mn>0</mn><mo stretchy="false">)</mo><mtext> </mtext><mo>…</mo><mtext> </mtext></mrow><annotation encoding="application/x-tex">(0,0)-&gt;(x, x)–&gt;(2x, 0)–&gt;(3x, x)–&gt;(4x, 0) … </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"> </span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">–</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"> 0</span><span class="mclose">)</span><span class="mord">–</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"> </span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">–</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"> 0</span><span class="mclose">)</span><span class="mord"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"> </span></span></span></span></p><p>其中x称为这条折线的畸形值。</p><p>现给出一点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>，询问是存在一条或多条畸形的折线经过它。若存在，找出满足要求的折线中畸形值最小的一条。</p><h4 id="Input">[Input]</h4><p>一行两个整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span></span>.<br>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">1≤a,b≤10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>.</p><h4 id="Output">[Output]</h4><p>若存在满足要求的直线，输出最小畸形值，答案用既约分数表示。<br>不存在则输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>.</p><h4 id="Sample-Input-Output">[Sample Input &amp; Output]</h4><table><thead><tr><th style="text-align:left"><null>polyline.in</null></th><th style="text-align:left">polyline.out</th></tr></thead><tbody><tr><td style="text-align:left">4 1</td><td style="text-align:left">5/4</td></tr></tbody></table><h4 id="Hint-10">[Hint]</h4><p>样例解释：</p><p>最小畸形值为1.25，如图所示：</p><p><img src="/image/posts/simple-or-naive/1.jpg" alt=""></p><h3 id="2-链表-chain-cpp-c-pas">2.链表 (chain.cpp/c/pas)</h3><h4 id="Description-18">[Description]</h4><p>笔者最近学了学块状链表…于是造了这道题</p><p>我们可以实力简化一下模型：</p><p>一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>的链表共有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个“块”，编号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1\sim n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。每块中放置了一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>的数组，第i块中的数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">0\sim a_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>的单位空间内存储了长度为ai的有效信息。</p><p>这样，第i块中的数组就有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k-a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的单位空间是没有使用的，这样造成了时间和空间效率的常数增加，所以需要合并一部分块来提高运行效率。</p><p>两个块<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>能够合并，当且仅当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn><mo>=</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i+1=j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>+</mo><msub><mi>a</mi><mi>j</mi></msub><mo>≤</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">a_i+a_j≤k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9221em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>.</p><p>操作为:将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>的有效信息紧接到i的有效信息后面，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的数组中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><msub><mi>a</mi><mi>i</mi></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">0\sim a_i+a_{j-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的单位空间内形成长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>+</mo><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_i+a_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的有效信息，并删除<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>。</p><p>令表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∼</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i\sim j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>块最少能合并到多少块，如当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">k=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{1,1,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>最少合并到两块。</p><p>现给定一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>的链表，希望<s>孙子们</s>完成下列任务：</p><p>1.计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></p><p>2.计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>i</mi></mrow><mi>n</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n}\sum_{j=i}^{n}f(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2401em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></p><h4 id="Input-2">[Input]</h4><p>第一行两个整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">n,k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>.<br>第二行n个整数表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mtext> </mtext><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1~a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.<br>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">1≤n≤10^5,1≤k≤10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>,所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>小于等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>.</p><h4 id="Output-2">[Output]</h4><p>一行两个整数，空格隔开，分别为第一二个任务的值。<br>对于每个测试点，若第一问正确，获得30%的分数，若第二问正确，获得70%的分数。</p><h4 id="Sample-Input-Output-2">[Sample Input&amp;Output]</h4><table><thead><tr><th style="text-align:left"><null>chain.in</null></th><th style="text-align:left">chain.out</th></tr></thead><tbody><tr><td style="text-align:left">3 2 <br> 1 1 1</td><td style="text-align:left">2 7</td></tr></tbody></table><h3 id="3-最小直径生成树-mdst-cpp-c-pas">3.最小直径生成树 (mdst.cpp/c/pas)</h3><h4 id="Description-19">[Description]</h4><p>给出一个有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个结点和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>条边的无向连通图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>，找出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>的所有生成树中直径最小的一棵，输出它的直径。</p><p>注：一棵树的直径指这棵树上任意两点间路径的最大值。</p><h4 id="Input-3">[Input]</h4><p>第一行两个整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n,m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span></span>.<br>接下来<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>行，每行三个整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">x,y,w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，表示结点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>间有一条长度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>的边。</p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>200</mn><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>≤</mo><mi>m</mi><mo>≤</mo><mn>10000</mn><mo separator="true">,</mo><mn>0</mn><mo>≤</mo><mi>w</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">x,y≤n≤200,n−1≤m≤10000,0≤w≤10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">200</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">10000</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>.<br>输入保证没有自环和重边。</p><h4 id="Output-3">[Output]</h4><p>一行一个整数，表示最小直径。</p><h4 id="Sample-Input-Output-3">[Sample Input&amp;Output]</h4><table><thead><tr><th style="text-align:left"><null>mdst.in</null></th><th style="text-align:left">mdst.out</th></tr></thead><tbody><tr><td style="text-align:left">3 3 <br> 1 2 1 <br> 1 3 2 <br> 2 3 1</td><td style="text-align:left">2</td></tr></tbody></table><h4 id="Hint-11">[Hint]</h4><p>样例解释：</p><p>原图及其最小直径生成树。</p><p><img src="/image/posts/simple-or-naive/2.jpg" alt=""></p><h1>Solutions - it is supercalifragilisticexpialidocious!</h1><p>随便扯扯<br>第一次出题，好紧张&gt;&lt;<br>各种纠结题意讲清楚了没/标程写对了没/数据强不强/难度适不适中/balabala…还有…这篇题解写得好不好qwq</p><p>还是从头说起…<br>出题过程是这样的…<br>大概一个月前接到要出模拟题的消息…<br>当时脑中浮现的是一道去年寒假脑补的题…当时并没做出来，以为自己太弱了。现在又想了想，还是不会做啊…但立志要把er这道题放上去。于是跑去问zty，十分敷衍；问lxy，觉得不可做；问vfk，也不会做…于是还是弃掉这道题吧qwq<br>不过不着急，还有时间<br>期间打了次cf，当时没人跟我一起打，于是我就偷偷将一题kuǎi了过来2333（就是第一题），然后帮助大家复习欧几里得，修改了答案的表示方法。<br>有次随便点开一道BZOJ的题，被标题深深吸引(smg- -)，然后就有了今天的第三题= =，只是增强了下数据范围（小数据都是OJ上的源数据）。<br>有了数学和数据结构，还差贪心/二分/动态规划啊！<br>在学块状链表的时候有合并操作，当时脑补了些奇怪的东西，就成了第二题的第一问。本来设计了个DP解决，后来一想这TM就是个贪心= =（当时一身冷汗，还好没这样就放出来），然后整张卷子难度就十分不乐观了啊，怎么办呢…还是稍微改改题吧er…于是想了很多种改法（在下面可以见到一些），发现这样能考到DP，且复杂度跟第一问相吻，就喜闻乐见的出出第二问啦~<br>在这里还要特别感谢lxy神犇提供的帮助~</p><p>总结来说，认真出一张卷子过程还是非常锻炼的~<br>然后我觉得我出得非常好- -<br>难度达到了，而且知识点并没有超过范围…<br>然后考点设计的比较全面，都是些常考的…<br>然后题面也没有那么冗杂了…<br>缺陷就是代码量偏小吧…应该大家能感知得到，然后数据结构考察也比较弱。<br>总之自己比较满意…<br>就不扯淡了，下面有三道题题解，同时拓展了一些内容。</p><p>Written by Codeplay0314 on 2015/10/01</p><h2 id="1-折线">1.折线</h2><p>显然问题有解当且仅当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a≤b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>.下面讨论有解的情况:</p><p>可以证明最优解下点一定在折线的右边一支，否则存在更优（证明略）。</p><p>过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mtext>，</mtext><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,0)，(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>以x轴为斜边画出一个直角等腰三角形（深绿）</p><p><img src="/image/posts/simple-or-naive/3.jpg" alt=""></p><p>我们即要在这个三角形底上切出尽量多的全等直角三角形（草绿），且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>要在最后一个三角形的边上。可以看出，三角形切得越多，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>就越小。</p><p>最多切多少个呢？<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a+b)/(2*b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>.所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><mn>0.5</mn><mo>∗</mo><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ans=0.5*(a+b)/((a+b)/(2*b))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">((</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">))</span></span></span></span>.<br>再用下欧几里得就能表示答案了！注意特判分母=1的情况。</p><p>其实原题二分是可做的（我当时就是这样做），这一题就实力做不到了23333</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="keyword">return</span> !y?x:<span class="built_in">gcd</span>(y,x%y); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">&quot;polyline.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">&quot;polyline.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">  <span class="keyword">int</span> a,b; <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">  <span class="keyword">if</span>(a&lt;b) <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=a+b,y=x/(<span class="number">2</span>*b)*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> GCD=<span class="built_in">gcd</span>(x,y); x/=GCD,y/=GCD;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,x);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d/%d&quot;</span>,x,y);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-链表">2.链表</h2><p>深切感知造题过程充满艰辛qwq</p><p>第一问是一个很简单的贪心，每个元素尽量往前放，放不下就形成一个新块。一定是最优解。至于正确性…自己感受感受。</p><p>第二问DP，设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>表示以i开始的所有区间的值，假设j为最大的数使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>…</mo><mi>a</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">a[i]+a[i+1]…a[j]≤k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，于是我们得到转移方程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mo>+</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(i)=f(j)+n−i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>正确性也是基于第一问的贪心。<br>每个j的计算用双端队列就能<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>算出了！<br>所以总时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],g[maxn];</span><br><span class="line">ll f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">&quot;chain.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">&quot;chain.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">  <span class="keyword">int</span> n,k; <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">  <span class="keyword">int</span> ans1=<span class="number">1</span>; ll ans2=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,now=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    <span class="keyword">if</span>((ll)now+a[i]&lt;=k) now+=a[i];</span><br><span class="line">    <span class="keyword">else</span> now=a[i],ans1++;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,r=<span class="number">0</span>,now=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(r&lt;=n &amp;&amp; (ll)now+a[r]&lt;=k) now+=a[r++];</span><br><span class="line">    g[i]=r; now-=a[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    ans2+=f[i]=f[g[i]]+n-i;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d %lld&quot;</span>,ans1,ans2);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拓展延伸：</p><ul><li>多个查询区间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l,r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span> —— 应该是某种数据结构</li><li>ai随机，询问查询<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mtext> </mtext><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,\ n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span>的期望值 —— <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><msup><mi>k</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n∗k^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的DP?!</li></ul><h2 id="3-最小直径生成树">3.最小直径生成树</h2><p>涉及：图的绝对中心，最短路树。</p><p>实现及技巧：枚举，Floyd,分段函数。</p><p>（其实下面写这么多都是一句话能讲清的事…）</p><p>一棵树有如下性质：</p><ul><li>树的中心（树的直径的中点）为树上所有点（包括边上的点）到其最远点距离的最大值最小的点。</li><li>树上所有点中到其最远点距离的最大值最小的点为树的中心。<br>对于此题，我们要找到一棵生成树使得直径最小，就要在图里找到一个中心使它到其他所有点的最远距离最小，我们把这个点称为图的绝对中心。<br>显然与这个点的距离为最远的点至少有两个（不然可调整至更优），若以这三点的连线作为最小直径生成树的直径，答案就一定是最优的的了。然而不可行呢？<br>当然。我们建一棵以绝对中心为根的最短路树（指根结点到其他结点的边都是原图中根结点到其他结点最短路上的边的树）就可以了，这样保证了直径的长度就为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><mtext>绝对中心到最远点的距离</mtext></mrow><annotation encoding="application/x-tex">2*绝对中心到最远点的距离</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">绝对中心到最远点的距离</span></span></span></span>，达到最优。<br>那么怎么找出图的绝对中心呢？枚举。<br>我们枚举每条边，看看绝对中心放在这条边的哪个位置更优。<br>下面单独讨论一条边<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>。<br>我们假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>长<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>u</mi><mo separator="true">,</mo><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{u,v}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，把绝对中心放在距<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 结点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">γe</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord mathnormal">e</span></span></span></span>的位置，那么绝对中心到其他点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的为距离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>w</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">awi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span></span></span></span>关于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">γe</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord mathnormal">e</span></span></span></span>满足函数关系<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>w</mi><mi>i</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>d</mi><mi>i</mi><mi>s</mi><mo stretchy="false">[</mo><mi>u</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>w</mi><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mi>γ</mi><mi>e</mi><mo separator="true">,</mo><mi>d</mi><mi>i</mi><mi>s</mi><mo stretchy="false">[</mo><mi>v</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>w</mi><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mi>W</mi><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo>−</mo><mi>γ</mi><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">awi=min(dis[u][wi]+γe,dis[v][wi]+Wu,v-γe)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span>，画出绝对中心与所有点的距离函数，最上方的一只则代表绝对中心与最远点的距离与γe的关系（如下图所示），而这段折线的最低点即为最优的放置方案，所有边的最小值即为所求直径的一半了。</li></ul><p><img src="/image/posts/simple-or-naive/4.jpg" alt=""></p><p>观察发现，若条边上<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>存在绝对中心，则直径的两个端点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi></mrow><annotation encoding="application/x-tex">x,\ y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>中，若离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>较近，则离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>较，所以我们将点按<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mo stretchy="false">[</mo><mi>u</mi><mo stretchy="false">]</mo><mtext>，</mtext><mi>d</mi><mi>i</mi><mi>s</mi><mo stretchy="false">[</mo><mi>v</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dis[u]，dis[v]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">u</span><span class="mclose">]</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">]</span></span></span></span>排好序，就可以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>计算出这条直线上的所有折点，就很容易设计一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的算法了（详见代码）。</p><p>拓展延伸：</p><ul><li>若要你输出这棵树（怎么求最短路树）呢？ ——SPOJ1479</li><li>求最小直径最小生成树（直径最小的同时保证边权最小）？<br>有兴趣的同学可以自行学习《最短路树的计数、产生和优化问题》<br>戳 &gt;&gt; <a href="http://www.docin.com/p-624656262.html">http://www.docin.com/p-624656262.html</a></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="keyword">return</span> x&lt;y?x:y; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>&amp;x,<span class="keyword">int</span>&amp;y)</span></span>&#123; <span class="keyword">int</span> t=x;x=y;y=t; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=~<span class="number">0u</span>&gt;&gt;<span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">int</span> e[maxn][maxn],d[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> rk[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">&quot;mdst.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">&quot;mdst.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">  <span class="keyword">int</span> n=<span class="built_in">read</span>(),m=<span class="built_in">read</span>(),ans=inf;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">e[i][i]=d[i][i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">  e[i][j]=e[j][i]=d[i][j]=d[j][i]=inf;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="built_in">read</span>()<span class="number">-1</span>,y=<span class="built_in">read</span>()<span class="number">-1</span>,w=<span class="built_in">read</span>();</span><br><span class="line">e[x][y]=e[y][x]=d[x][y]=d[y][x]=w;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">d[i][j]=<span class="built_in">min</span>(d[i][j],d[i][k]+d[k][j]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) rk[i][j]=j;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;n;k++)</span><br><span class="line"><span class="keyword">if</span>(d[i][rk[i][j]]&gt;d[i][rk[i][k]])</span><br><span class="line">  <span class="built_in">swap</span>(rk[i][j],rk[i][k]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">0</span>;v&lt;n;v++)&#123;</span><br><span class="line">  ans=<span class="built_in">min</span>(ans,d[u][rk[u][n<span class="number">-1</span>]]&lt;&lt;<span class="number">1</span>);</span><br><span class="line">  ans=<span class="built_in">min</span>(ans,d[v][rk[v][n<span class="number">-1</span>]]&lt;&lt;<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> cmp=n<span class="number">-1</span>,i=cmp<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">if</span>(d[v][rk[u][i]]&gt;d[v][rk[u][cmp]])</span><br><span class="line">  ans=<span class="built_in">min</span>(ans,d[u][rk[u][i]]+d[v][rk[u][cmp]]+e[u][v]),cmp=i;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>祝大家NOIP顺利~</h1>]]></content>
    
    
    <summary type="html">很久之前造的一套题…终于可以发上来了！</summary>
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="树的重心与直径" scheme="http://codeplay0314.com/tags/%E6%A0%91%E7%9A%84%E9%87%8D%E5%BF%83%E4%B8%8E%E7%9B%B4%E5%BE%84/"/>
    
    <category term="数学相关" scheme="http://codeplay0314.com/tags/%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Floyd" scheme="http://codeplay0314.com/tags/Floyd/"/>
    
    <category term="codeforces" scheme="http://codeplay0314.com/tags/codeforces/"/>
    
    <category term="动态规划" scheme="http://codeplay0314.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="图论" scheme="http://codeplay0314.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="枚举" scheme="http://codeplay0314.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
    <category term="欧几里得算法" scheme="http://codeplay0314.com/tags/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/"/>
    
    <category term="贪心" scheme="http://codeplay0314.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>数据结构 | 并查集</title>
    <link href="http://codeplay0314.com/articles/2015-10-18/disjoint-set/"/>
    <id>http://codeplay0314.com/articles/2015-10-18/disjoint-set/</id>
    <published>2015-10-18T04:00:00.000Z</published>
    <updated>2015-10-18T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>简单并查集</h1><h2 id="BZOJ-1529-POI2005-ska-Piggy-banks">[BZOJ 1529] POI2005 ska Piggy banks</h2><h3 id="Description-11">[Description]</h3><p>n个存钱罐，只能用钥匙打开或砸开。每个存钱罐有一把钥匙，放在任意一个存钱罐中，问最少要砸开多少个存钱罐才能打开所有存钱罐。</p><h3 id="Hint-4">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">n≤10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="Solution-11">[Solution]</h3><p>打了Tarjan缩点统计度为0的点数然后喜闻乐见地MLE了…然而并查集不知道优越到哪里去了…<br>发现每个点有且仅有一个前驱，所以连通块的形状一定是一个环或者一个环从某点长出一条链…<br>然后统计连通块个数就可以了…</p><h2 id="BZOJ-2079-POI2079-Guild">[BZOJ 2079] POI2079 Guild</h2><h3 id="Description-12">[Description]</h3><p>给出一个n个点m条边的无向图，现在要进行黑白染色，要满足某个点要与自己不同颜色的点相连，问是否能做到。</p><h3 id="Hint-5">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>5</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">n≤2⋅10^5,m≤5⋅10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="Solution-12">[Solution]</h3><p>傻逼题…<br>对一个连通块求任意一棵生成树然后分层染色就是合法的方案。<br>不合法当且仅当存在大小为1的连通块。</p><h2 id="BZOJ-1116-POI2008-CLO">[BZOJ 1116] POI2008 CLO</h2><h3 id="Description-13">[Description]</h3><p>给出一个n个点m条边的无向图。现在可以将一些边变成有向边，问可不可以做到每个点有且只有一条有向入边。</p><h3 id="Hint-6">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">n≤10^5,m≤2⋅10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="Solution-13">[Solution]</h3><p>我们发现一个连通块中若存在环整个连通块就可行，依次判断即可。<br>用并查集尤为方便：另开一个数组记录以某个点为根的并查集存不存在环，若某条边的两个点在同一个并查集中，将这个并查集的根标为true.<br>最后只用判断是否所有根都为true即可。</p><h2 id="BZOJ-1854-SCOI2010-游戏">[BZOJ 1854] SCOI2010 游戏</h2><h3 id="Description-14">[Description]</h3><p>n个物品，每个物品有两个属性值a,b，分别为1~10000的一个整数。每种物品仅可以发挥出一种属性值。<br>问最大的x，使得[1,x]所有属性值的物品都存在。</p><h3 id="Hint-7">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">n≤10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="Solution-14">[Solution]</h3><p>听说能用并查集做…<br>把属性值定义为点，同一物品的属性a,b看边(a,b)，这样建成一个图。<br>我们需要“为每条边选一个指向，使得被指向的点尽量多”。是不是有点像上一题了呢？但并不尽相同。<br>若一个连通块存在环，同样还是所有点都能被指向。<br>考虑树的情况，我们发现可以构造出一种方案任意n-1个点被指向。<br>因为题意要求尽量小的物品存在，所以我们规定树中值最大的点不被指（同样在并查集中可以实现，开一个数组标记某个元素被不被指，合并两个并查集时将根较小的标记为true，并把它连到另一个根上；若某条边的两个点在同一个并查集中，将这个并查集的根标为true）。<br>最后<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>判断一下就可以了。</p><h1>可拆的并查集</h1><p>其实就是不加路径压缩…</p><h2 id="BZOJ-1016-最小生成树计数">[BZOJ 1016] 最小生成树计数</h2><h3 id="Description-15">[Description]</h3><p>给出一个n个点m条边的带权无向图，相同边权不会超过10个，询问最小生成树个数。</p><h3 id="Hint-8">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>100</mn><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">n≤100,m≤1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">100</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span></p><h3 id="Solution-15">[Solution]</h3><p>每种边权的贡献是一定的。统计一下然后DFS.</p><p>带权并查集</p><h2 id="BZOJ-1202-狡猾的商人">[BZOJ 1202] 狡猾的商人</h2><h3 id="Description-16">[Description]</h3><p>长度为n的一个序列，有m条信息(a,b,c)，表示区间[a,b]的和为c。询问所有信息是否有冲突。</p><h3 id="Hint-9">[Hint]</h3><p>多组数据。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>100</mn><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">n≤100,m≤1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">100</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span>.</p><h3 id="Solution-16">[Solution]</h3><p>另开一个数组记录一下与根之间的距离即可（比较容易就不多说了）。</p><p>More<br>码一些之前做过的，都相对简单。</p><h2 id="BZOJ-1050-旅行">[BZOJ 1050] 旅行</h2><p>最小瓶颈生成树。</p><h2 id="BZOJ-1015-星球大战">[BZOJ 1015] 星球大战</h2><p>离线处理。</p><h2 id="BZOJ-2054-疯狂的馒头">[BZOJ 2054] 疯狂的馒头</h2><p>并查集或链表。</p><h2 id="BZOJ-1370-团伙">[BZOJ 1370] 团伙</h2><p>设立虚点。</p><h2 id="BZOJ-4195-NOI2015-程序自动分析">[BZOJ 4195] NOI2015 程序自动分析</h2><p>NOI竟然有这种题…</p><h2 id="Ural1003-奇偶性">Ural1003 奇偶性</h2><p>虚点。</p><h2 id="NOIP2010-关押罪犯">NOIP2010 关押罪犯</h2><p>虚点。</p><h2 id="NOI2002-银河英雄传说">NOI2002 银河英雄传说</h2><p>带权并查集。</p><h2 id="NOI2002-食物链">NOI2002 食物链</h2><p>带权并查集或虚点。</p><h2 id="POI-代码等式">POI 代码等式</h2><h2 id="POI-可爱的猴子">POI 可爱的猴子</h2><p>离线处理。</p><h2 id="APOI2011-方格染色">APOI2011 方格染色</h2><p>好题~</p>]]></content>
    
    
    <summary type="html">依旧是BZOJ的题集…做完后翻了翻TB以前的那个专题Word，发现所有题目都有…原来当时就还没有搞完…然后现在还有一个坑就是可持久化并查集，联赛之后如果没有AFO就补吧er…</summary>
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="并查集" scheme="http://codeplay0314.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>数据结构 | 栈和队列（进阶）</title>
    <link href="http://codeplay0314.com/articles/2015-10-10/stack-and-queue-advanced/"/>
    <id>http://codeplay0314.com/articles/2015-10-10/stack-and-queue-advanced/</id>
    <published>2015-10-10T04:00:00.000Z</published>
    <updated>2015-10-10T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>栈</h1><h2 id="单调栈">单调栈</h2><h3 id="BZOJ-1012-JSOI2008-最大数">[BZOJ 1012] JSOI2008 最大数</h3><h4 id="Description-5">[Description]</h4><p>长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n≤2⋅10^5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的序列，有一些查询表示为(pos,L)，询问区间[L-pos+1,L]的最大值，强制在线。</p><h4 id="Solution-5">[Solution]</h4><p>我们知道，若所有L一样，就是一个经典的单调队列模型。<br>然而L并不一样啊，这时队列的一边并不能随随便便弹出元素，因为以后可能还会用到。<br>所以这一边就不弹元素了，只要保持单调，我们就可以二分出询问位置的答案。<br>然后就退化成单调栈了，复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⋅</mo><mi>l</mi><mi>o</mi><mi>g</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\cdot log\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</p><h4 id="Code-5">[Code]</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=(x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isalpha</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> c;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stack</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> seq[maxn],p;</span><br><span class="line">  <span class="built_in">stack</span>()&#123; p=<span class="number">0</span>; &#125;</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> seq[p<span class="number">-1</span>]; &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>&#123; p--; &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; seq[p++]=x; &#125;</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> !p; &#125;</span><br><span class="line">&#125;s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> t=*(<span class="built_in">lower_bound</span>(s.seq,s.seq+s.p,pos));</span><br><span class="line">  <span class="keyword">return</span> a[t];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> q=<span class="built_in">read</span>(),d=<span class="built_in">read</span>(),t=<span class="number">0</span>;</span><br><span class="line">  s.p=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">    <span class="keyword">int</span> kase=<span class="built_in">getc</span>()==<span class="string">&#x27;A&#x27;</span>?<span class="number">1</span>:<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(kase==<span class="number">1</span>)&#123;</span><br><span class="line">      a[cnt]=(<span class="built_in">read</span>()+t)%d;</span><br><span class="line">      <span class="keyword">while</span>(!s.<span class="built_in">empty</span>() &amp;&amp; a[s.<span class="built_in">top</span>()]&lt;=a[cnt]) s.<span class="built_in">pop</span>();</span><br><span class="line">  s.<span class="built_in">push</span>(cnt++);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,t=<span class="built_in">query</span>(cnt-<span class="built_in">read</span>()));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BZOJ-1127-POI2008-KUP">[BZOJ 1127] POI2008 KUP</h3><h4 id="Description-6">[Description]</h4><p>给一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>⋅</mo><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≤</mo><mn>2000</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n⋅n(n≤2000)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2000</span><span class="mclose">)</span></span></span></span>的地图，每个格子有一个价格。要求找一个矩形区域，使其价格总和位于[k,2k].<br>输出矩形左上角和右下角的坐标。<br>（<strong>注意的数据范围题目写错了</strong>）</p><h4 id="Solution-6">[Solution]</h4><p>考虑一维也就是单行的情况，若这个序列中存在[k,2k]之间的点，则直接输出。<br>否则若找到一个区间满足，所有的元素都小于k，且区间和大于2k，这个区间一定包含一个答案区间。<br>在否则就无解了。<br>推广到二维也是一样，找到一个矩阵满足，所有的元素都小于k，矩阵和大于2k，这个矩阵一定包含一个答案矩阵。<br>将小于k的元素标记为1，利用单调栈找到一些最大全1子矩阵，若找到一个和大于2k的全1子阵，我们可以直接寻找答案。<br>注意到满足要求的子矩阵和是大于等于2*k的，我们考虑子矩阵的第一行和最后一行，一定有一行不超过矩阵和/2，将它删除，再重复删除操作直至矩阵和位于[k,2k]为止，输出答案。<br>这样做为什么一定能达到[k,2k]呢？想到，每次矩阵的缩减不超过一半，所以一定有一时刻减到[k,2k].<br>总复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</p><h4 id="Code-6">[Code]</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e3</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> k,n;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn];</span><br><span class="line">ll sum[maxn][maxn];</span><br><span class="line"></span><br><span class="line">stack&lt;<span class="keyword">int</span>&gt; s,w;</span><br><span class="line"><span class="keyword">int</span> b[maxn][maxn];</span><br><span class="line"><span class="function">ll <span class="title">area</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> sum[x2][y2]-sum[x1<span class="number">-1</span>][y2]-sum[x2][y1<span class="number">-1</span>]+sum[x1<span class="number">-1</span>][y1<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>&#123;</span><br><span class="line">  ll x=<span class="built_in">area</span>(x1,y1,x2,y2);</span><br><span class="line">  <span class="keyword">if</span>(x&lt;k) <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">  <span class="keyword">while</span>(x&gt;<span class="number">2</span>*k &amp;&amp; x1&lt;x2)&#123;</span><br><span class="line">    ll u=<span class="built_in">area</span>(x1,y1,x1,y2),v=<span class="built_in">area</span>(x2,y1,x2,y2);</span><br><span class="line">    <span class="keyword">if</span>(u&lt;v) x-=u,x1++;</span><br><span class="line">    <span class="keyword">else</span> x-=v,x2--;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(x&lt;=<span class="number">2</span>*k)&#123; <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>,y1,x1,y2,x2); <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">  <span class="keyword">while</span>(!s.<span class="built_in">empty</span>() &amp;&amp; b[i][s.<span class="built_in">top</span>()]&gt;=b[i][j])&#123;</span><br><span class="line">    <span class="keyword">int</span> t1=s.<span class="built_in">top</span>(),t2=w.<span class="built_in">top</span>(); s.<span class="built_in">pop</span>(),w.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">int</span> x1=i-b[i][t1]+<span class="number">1</span>,y1=t2,x2=i,y2=j<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(x1,y1,x2,y2)) <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  w.<span class="built_in">push</span>(w.<span class="built_in">empty</span>()?<span class="number">1</span>:s.<span class="built_in">top</span>()+<span class="number">1</span>),s.<span class="built_in">push</span>(j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!s.<span class="built_in">empty</span>())&#123;</span><br><span class="line">  <span class="keyword">int</span> t1=s.<span class="built_in">top</span>(),t2=w.<span class="built_in">top</span>(); s.<span class="built_in">pop</span>(),w.<span class="built_in">pop</span>();</span><br><span class="line">  <span class="keyword">int</span> x1=i-b[i][t1]+<span class="number">1</span>,y1=t2,x2=i,y2=n;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">check</span>(x1,y1,x2,y2)) <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  k=<span class="built_in">read</span>(),n=<span class="built_in">read</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">      a[i][j]=<span class="built_in">read</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">      sum[i][j]=a[i][j]+sum[i<span class="number">-1</span>][j]+sum[i][j<span class="number">-1</span>]-sum[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">      <span class="keyword">if</span>(a[i][j]&lt;k) b[i][j]=<span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(a[i][j]&lt;=<span class="number">2</span>*k)&#123; <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>,j,i,j,i); <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">      b[i][j]=b[i][j]?(b[i<span class="number">-1</span>][j]+b[i][j]):<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">work</span>();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;NIE&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>队列</h1><h2 id="优先队列">优先队列</h2><p>三题都差不多，具体可见 &gt;&gt; <a href="/articles/2015-10-07/linked-list/">链表 | Linked List</a></p><h3 id="BZOJ-1150-数据备份">[BZOJ 1150] 数据备份</h3><h3 id="BZOJ-2151-种树-2">[BZOJ 2151] 种树</h3><h3 id="BZOJ-2288-生日礼物-2">[BZOJ 2288] 生日礼物</h3><h2 id="单调队列">单调队列</h2><p>（很多POI的题？！）</p><h3 id="BZOJ-1047-HAOI2007-理想的正方形">[BZOJ 1047] HAOI2007 理想的正方形</h3><h4 id="Description-7">[Description]</h4><p>有一个a*b的整数组成的矩阵，现请你从中找出一个n*n的正方形区域，使得该区域所有数中的最大值和最小值的差最小。<br>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>≤</mo><mn>2000</mn><mo separator="true">,</mo><mi>n</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">a,b≤2000,n≤100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2000</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span>.</p><h4 id="Solution-7">[Solution]</h4><p>二维单调队列（感觉某些数据结构从一维拓展到二维非常好脑补）。</p><h4 id="Code-7">[Code]</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">int</span> a,b,n;</span><br><span class="line"><span class="keyword">int</span> matrix[maxn][maxn];</span><br><span class="line"></span><br><span class="line">deque&lt;<span class="keyword">int</span>&gt; q1,q2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(!q1.<span class="built_in">empty</span>()) q1.<span class="built_in">pop_front</span>();</span><br><span class="line">  <span class="keyword">while</span>(!q2.<span class="built_in">empty</span>()) q2.<span class="built_in">pop_front</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> Min[maxn][maxn],Max[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work_1D</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">  <span class="built_in">clear</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;b;i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(!q1.<span class="built_in">empty</span>() &amp;&amp; i-q1.<span class="built_in">front</span>()&gt;=n) q1.<span class="built_in">pop_front</span>();</span><br><span class="line">    <span class="keyword">while</span>(!q1.<span class="built_in">empty</span>() &amp;&amp; matrix[k][q1.<span class="built_in">back</span>()]&gt;=matrix[k][i]) q1.<span class="built_in">pop_back</span>();</span><br><span class="line">    q1.<span class="built_in">push_back</span>(i); Min[k][i]=matrix[k][q1.<span class="built_in">front</span>()];</span><br><span class="line">    <span class="keyword">while</span>(!q2.<span class="built_in">empty</span>() &amp;&amp; i-q2.<span class="built_in">front</span>()&gt;=n) q2.<span class="built_in">pop_front</span>();</span><br><span class="line">    <span class="keyword">while</span>(!q2.<span class="built_in">empty</span>() &amp;&amp; matrix[k][q2.<span class="built_in">back</span>()]&lt;=matrix[k][i]) q2.<span class="built_in">pop_back</span>();</span><br><span class="line">    q2.<span class="built_in">push_back</span>(i); Max[k][i]=matrix[k][q2.<span class="built_in">front</span>()];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=~<span class="number">0u</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work_2D</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">  <span class="built_in">clear</span>();</span><br><span class="line">  <span class="keyword">int</span> MIN,MAX;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a;i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(!q1.<span class="built_in">empty</span>() &amp;&amp; i-q1.<span class="built_in">front</span>()&gt;=n) q1.<span class="built_in">pop_front</span>();</span><br><span class="line">    <span class="keyword">while</span>(!q1.<span class="built_in">empty</span>() &amp;&amp; Min[q1.<span class="built_in">back</span>()][k]&gt;=Min[i][k]) q1.<span class="built_in">pop_back</span>();</span><br><span class="line">    q1.<span class="built_in">push_back</span>(i); MIN=Min[q1.<span class="built_in">front</span>()][k];</span><br><span class="line">    <span class="keyword">while</span>(!q2.<span class="built_in">empty</span>() &amp;&amp; i-q2.<span class="built_in">front</span>()&gt;=n) q2.<span class="built_in">pop_front</span>();</span><br><span class="line">    <span class="keyword">while</span>(!q2.<span class="built_in">empty</span>() &amp;&amp; Max[q2.<span class="built_in">back</span>()][k]&lt;=Max[i][k]) q2.<span class="built_in">pop_back</span>();</span><br><span class="line">    q2.<span class="built_in">push_back</span>(i); MAX=Max[q2.<span class="built_in">front</span>()][k];</span><br><span class="line">    <span class="keyword">if</span>(i&gt;=n<span class="number">-1</span>) ans=<span class="built_in">min</span>(ans,MAX-MIN);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  a=<span class="built_in">read</span>(),b=<span class="built_in">read</span>(),n=<span class="built_in">read</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;b;j++)</span><br><span class="line">      matrix[i][j]=<span class="built_in">read</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a;i++) <span class="built_in">work_1D</span>(i);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&lt;b;i++) <span class="built_in">work_2D</span>(i);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BZOJ-2096-POI2010-Pilots">[BZOJ 2096] POI2010 Pilots</h3><h4 id="Description-8">[Description]</h4><p>在长度为n的找到一个最长的连续子串，最大值和最小值的差不超过k.</p><p>[Hint]<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>3</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup><mo separator="true">,</mo><mi>k</mi><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">n≤3⋅10^6,k≤2⋅10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>.</p><h4 id="Solution-8">[Solution]</h4><p>l随r增大而不减。<br>维护递增递减两个队列，弹出最左元素来维护要求。</p><h4 id="Code-8">[Code]</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="keyword">return</span> x&gt;y?x:y; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3e6</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"></span><br><span class="line">deque&lt;<span class="keyword">int</span>&gt; q1,q2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> k=<span class="built_in">read</span>(),n=<span class="built_in">read</span>(),ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) a[i]=<span class="built_in">read</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,now=<span class="number">-1</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(!q1.<span class="built_in">empty</span>() &amp;&amp; a[q1.<span class="built_in">back</span>()]&lt;=a[i]) q1.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">while</span>(!q2.<span class="built_in">empty</span>() &amp;&amp; a[q2.<span class="built_in">back</span>()]&gt;=a[i]) q2.<span class="built_in">pop_back</span>();</span><br><span class="line">    q1.<span class="built_in">push_back</span>(i),q2.<span class="built_in">push_back</span>(i);</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(q1.<span class="built_in">empty</span>() || q2.<span class="built_in">empty</span>()) <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">int</span> x=q1.<span class="built_in">front</span>(),y=q2.<span class="built_in">front</span>();</span><br><span class="line">  <span class="keyword">if</span>(a[x]-a[y]&gt;k)</span><br><span class="line">    <span class="keyword">if</span>(x&lt;y) q1.<span class="built_in">pop_front</span>(),now=x;</span><br><span class="line">    <span class="keyword">else</span> q2.<span class="built_in">pop_front</span>(),now=y;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,i-now);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BZOJ-2276-POI2011-Temperature">[BZOJ 2276] POI2011 Temperature</h3><h4 id="Description-9">[Description]</h4><p>某国进行了连续<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n≤10^6)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>天的温度测量，测量存在误差，测量结果是第i天温度在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>l</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l_i,r_i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>范围内。<br>求最长的<strong>连续</strong>的一段，满足该段内<strong>可能</strong>温度不降。</p><h4 id="Solution-9">[Solution]</h4><p>单调队列维护极大的连续序列，保存编号。<br>保持队列中l的单调不降，且队中所有的r大于队首的l，这样，以当前对队尾结尾的合法区间中，l最小为最后一个在队首被弹出的元素+1。<br>复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</p><h4 id="Code-9">[Code]</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>(); <span class="keyword">bool</span> minu=<span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c) &amp;&amp; c-<span class="string">&#x27;-&#x27;</span>) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) minu=<span class="literal">true</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> minu?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">int</span> l[maxn],r[maxn];</span><br><span class="line"></span><br><span class="line">deque&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n=<span class="built_in">read</span>(),ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,now=<span class="number">-1</span>;i&lt;n;i++)&#123;</span><br><span class="line">    l[i]=<span class="built_in">read</span>(),r[i]=<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>() &amp;&amp; r[i]&lt;l[q.<span class="built_in">front</span>()]) now=q.<span class="built_in">front</span>(),q.<span class="built_in">pop_front</span>();</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>() &amp;&amp; l[q.<span class="built_in">back</span>()]&lt;=l[i]) q.<span class="built_in">pop_back</span>();</span><br><span class="line">    q.<span class="built_in">push_back</span>(i);</span><br><span class="line">    ans=<span class="built_in">max</span>(ans,i-now);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BZOJ-1122-POI2008-账本BBB">[BZOJ 1122] POI2008 账本BBB</h3><h4 id="Description-10">[Description]</h4><p>给定一个由+1和−1构成的长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n≤10^6)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的序列a，提供两种操作：<br>1.将某一位取反，花销为x<br>2.将最后一位移动到前一位，花销为y<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mtext>，经过若干此操作后，最终</mtext></mrow><annotation encoding="application/x-tex">sum[i]=\sum_{i=1}^ia[i]，经过若干此操作后，最终</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2643em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9646em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord cjk_fallback">，经过若干此操作后，最终</span></span></span></span>p+sum[n]=q$，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>p</mi><mo>+</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">0≤p+sum[i] (1≤i≤n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，求最小花销。<br>输入保证有解。</p><h4 id="Solution-10">[Solution]</h4><p>枚举序列从那一段开始（意味着先统计完第二种操作的数量），下面考虑只进行第一种操作的次数。<br>为了使影响尽量“有用”，我们将所有-1-&gt;1的操作从前往后进行，1-&gt;-1的操作从后往前进行。<br>首先为了满足最终sum=q-p，我们需要先进行abs(q-p-sum)/2次操作时sum合法。<br>设前缀和最低值为mini，若q-p-sum&gt;0，它首先变成了mini+(q-p-sum)，记为新mini。<br>再要满足所有前缀和都大于等于0，所以要使得mini大于等于0。<br>使mini大于等于0需要在mini的为之前进行(1-mini)/2次-1-&gt;1操作（而且显然有足够的可以操作），为了保持前缀和的值，mini之后再进行这么多次-1-&gt;1的操作（同样不会影响最低点）。<br>然后就可以统计第一种操作的数量了。<br>所以需要用单调队列预处理出对于每个位置前缀和最小的那个位置。<br>复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</p><h4 id="Code-10">[Code]</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">abs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="keyword">return</span> x&lt;<span class="number">0</span>?-x:x; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">2</span>*maxn];</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">2</span>*maxn],lowest[<span class="number">2</span>*maxn];</span><br><span class="line"></span><br><span class="line">deque&lt;<span class="keyword">int</span>&gt; d;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n; ll p,q,x,y; <span class="built_in">scanf</span>(<span class="string">&quot;%d%lld%lld%lld%lld&quot;</span>,&amp;n,&amp;p,&amp;q,&amp;x,&amp;y);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) s[i+n]=s[i];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=(n&lt;&lt;<span class="number">1</span>)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sum[i]=sum[i+<span class="number">1</span>]+(s[i]==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=(n&lt;&lt;<span class="number">1</span>)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">    <span class="keyword">while</span>(!d.<span class="built_in">empty</span>() &amp;&amp; d.<span class="built_in">back</span>()-i&gt;=n) d.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">while</span>(!d.<span class="built_in">empty</span>() &amp;&amp; sum[d.<span class="built_in">front</span>()]&lt;=sum[i]) d.<span class="built_in">pop_front</span>();</span><br><span class="line">    d.<span class="built_in">push_front</span>(i); lowest[i]=sum[i]-sum[d.<span class="built_in">back</span>()];</span><br><span class="line">  &#125;</span><br><span class="line">  ll ans=~<span class="number">0ull</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> t=(q-p-sum[n])/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span>((q-p-sum[n])&amp;<span class="number">1</span>)&#123; <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>); <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    ll res=x*<span class="built_in">abs</span>(t)+y*((n-i)%n);</span><br><span class="line">    lowest[i]+=p+(t&gt;<span class="number">0</span>?<span class="number">2</span>*t:<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(lowest[i]&lt;<span class="number">0</span>) res+=<span class="number">2</span>*x*((<span class="number">1</span>-lowest[i])&gt;&gt;<span class="number">1</span>);</span><br><span class="line">    ans=<span class="built_in">min</span>(ans,res);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">单调栈，优先队列和单调队列，以BZOJ例题为主</summary>
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="BZOJ" scheme="http://codeplay0314.com/tags/BZOJ/"/>
    
    <category term="单调栈" scheme="http://codeplay0314.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
    <category term="单调队列" scheme="http://codeplay0314.com/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
    <category term="堆" scheme="http://codeplay0314.com/tags/%E5%A0%86/"/>
    
    <category term="栈" scheme="http://codeplay0314.com/tags/%E6%A0%88/"/>
    
    <category term="队列" scheme="http://codeplay0314.com/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>数据结构 | 链表</title>
    <link href="http://codeplay0314.com/articles/2015-10-07/linked-list/"/>
    <id>http://codeplay0314.com/articles/2015-10-07/linked-list/</id>
    <published>2015-10-07T04:00:00.000Z</published>
    <updated>2015-10-07T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>概述</h1><p>说起来，链表是少数几个在正式学习之前就有点概念的数据结构。<br>记得很久很久之前有一题，貌似是要插入什么，当时是用线段树(?)解决了问题，但是想，为什么数组之间插入元素这么不方便呢？<br>然后就想到可以自己做个结构体用指针接起来，这样插入就可以O(1)实现了！<br>后来知道这就是链表。<br>再后来知道，这样插入也是非常不支持的，因为找到插入的位置也是O(n)的。<br>又后来，学会了数组模拟链表，可以快速找到插入位置。<br>然后就是一个非常兹磁的东西了！其实很多时候都是用于优化，程序的主算法都不会改变的。<br>下面是一些例题：</p><h1>例题</h1><h2 id="BZOJ-1098-办公楼biu">[BZOJ 1098] 办公楼biu</h2><h3 id="Description">[Description]</h3><p>求一个n点m边的无向图补图的连通块数。</p><h3 id="Hint">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">n≤10^5,m≤2⋅10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="Solution">[Solution]</h3><p>直接建补图肯定是爆炸的。<br>考虑某个点，不与它相邻的点在补图中肯定跟它位于同一个连通块。<br>与这些点不相连的所有点肯定也与这些点位于同一个连通块。<br>这样，可以一次把一个连通块里的所有点找出来。<br>删除后找下一个连通块。<br>提高效率的办法就是用链表。<br>永远都只考虑链表内的元素。<br>因为每条边和每个点都只会被访问一次，总复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>.</p><h3 id="Code-2">[Code]</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm=<span class="number">2e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> to[<span class="number">2</span>*maxm],nxt[<span class="number">2</span>*maxm],cur[maxn],cnt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">  to[cnt]=x,nxt[cnt]=cur[y],cur[y]=cnt++;</span><br><span class="line">  to[cnt]=y,nxt[cnt]=cur[x],cur[x]=cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn],off[maxn];</span><br><span class="line"></span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">int</span> res[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(off[<span class="number">0</span>]&lt;=n)&#123;</span><br><span class="line">    <span class="keyword">int</span> s=off[<span class="number">0</span>]; q.<span class="built_in">push</span>(s);</span><br><span class="line">    off[pre### [S]]=off### [S],pre[off### [S]]=pre### [S],res### [Sum]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">      <span class="keyword">int</span> u=q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=cur[u];i&gt;=<span class="number">0</span>;i=nxt[i])</span><br><span class="line">    flag[to[i]]=<span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=off[<span class="number">0</span>];i&lt;=n;i=off[i])</span><br><span class="line">    <span class="keyword">if</span>(!flag[i])&#123;</span><br><span class="line">      off[pre[i]]=off[i],pre[off[i]]=pre[i],flag[i]=<span class="literal">false</span>;</span><br><span class="line">      res### [Sum]++;</span><br><span class="line">      q.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> flag[i]=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">  <span class="built_in">sort</span>(res,res+sum);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;sum;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,res[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">memset</span>(cur,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(cur));</span><br><span class="line">  <span class="keyword">int</span> n=<span class="built_in">read</span>(),m=<span class="built_in">read</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) <span class="built_in">insert</span>(<span class="built_in">read</span>(),<span class="built_in">read</span>());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++) pre[i]=i<span class="number">-1</span>,off[i]=i+<span class="number">1</span>;</span><br><span class="line">  <span class="built_in">work</span>(n);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BZOJ-1150-CTSC2007-数据备份">[BZOJ 1150] CTSC2007 数据备份</h2><h3 id="Description-2">[Description]</h3><p><img src="/image/posts/linked-list/1150.jpg" alt="1150"></p><h3 id="Hint-2">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi>s</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">n≤10^5,1≤k≤n/2,s≤10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="Solution-2">[Solution]</h3><p>易得所有电缆一定是相邻的。<br>现在要选择k条不相邻的电缆使得距离最小。<br>再次使用链表，每次选择一个最小的元素加入答案，删除两边元素，并在原位置生成一个两边元素和减去自身的新元素。<br>每次选取元素个数-1，进行k次选取。<br>这样做的意义是，既保证不选择相邻元素，当需要选择相邻元素时又可以做到。<br>然后就可以愉快地AC辣~</p><h3 id="Code-3">[Code]</h3><p>数组模拟链表。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll inf=~<span class="number">0ull</span>&gt;&gt;<span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>;</span><br><span class="line">ll c[maxn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> exist[maxn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> pre[maxn],nxt[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span></span><br><span class="line">  ll x; <span class="keyword">int</span> pos;</span><br><span class="line">  <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> data d) <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;d.x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;data&gt; heap;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n=<span class="built_in">read</span>(),k=<span class="built_in">read</span>(); ll ans=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">fill</span>(exist,exist+n+<span class="number">1</span>,<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) c[i]=<span class="built_in">read</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;i--) c[i]-=c[i<span class="number">-1</span>];</span><br><span class="line">  c[<span class="number">0</span>]=c[n]=inf;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) pre[i]=i<span class="number">-1</span>,nxt[i]=i+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) heap.<span class="built_in">push</span>((data)&#123;c[i],i&#125;);</span><br><span class="line">  <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">    data d=heap.<span class="built_in">top</span>(); heap.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">int</span> p=d.pos;</span><br><span class="line">    <span class="keyword">if</span>(exist[p]==<span class="literal">false</span>)&#123; k++; <span class="keyword">continue</span>; &#125;</span><br><span class="line">    ans+=d.x;</span><br><span class="line">    c[p]=d.x=c[pre[p]]+c[nxt[p]]-c[p];</span><br><span class="line">    <span class="keyword">int</span> l=pre[pre[p]]&gt;=<span class="number">0</span>?pre[pre[p]]:pre[p];</span><br><span class="line">    <span class="keyword">int</span> r=nxt[nxt[p]]&lt;=n?nxt[nxt[p]]:nxt[p];</span><br><span class="line">    <span class="keyword">if</span>(nxt[l]!=p) exist[nxt[l]]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(pre[r]!=p) exist[pre[r]]=<span class="literal">false</span>;</span><br><span class="line">    nxt[l]=p,pre[p]=l; nxt[p]=r,pre[r]=p;</span><br><span class="line">    heap.<span class="built_in">push</span>(d);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BZOJ-2151-种树">[BZOJ 2151] 种树</h2><h3 id="Description-3">[Description]</h3><p>一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≤</mo><mn>2</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n≤2⋅10^5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的环形序列，每个位置不同的权值，要求选出m个不相邻的元素使得权值最大。</p><h3 id="Solution-3">[Solution]</h3><p>大致同数据备份，只是链表是环状的。</p><h2 id="BZOJ-2288-生日礼物">[BZOJ 2288] 生日礼物</h2><h3 id="Description-4">[Description]</h3><p>在长度为n的整数序列里选出不超过m段连续的子序列，使得选出的元素和最大。</p><h3 id="Hint-3">[Hint]</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">n,m≤10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></p><h3 id="Solution-4">[Solution]</h3><p>我们将连续的正整数和负整数分别合并，并不影响答案。<br>要是合并后正整数个数小于m，直接得到答案。<br>我们最终的结果是要得到m个正整数。<br>用堆每次选出绝对值最小的一个元素，将它与旁边两个数合并，因为它绝对值最小，得到的新数一定跟它符号相反。<br>这样做的意义是，若这个数为正整数，无论从左边或右边的区间选中它总和一定会减少；若这个数为负整数，左右区间合并之后可以达到更优。<br>合并中最左最右的负整数要抛弃。<br>这样合并知道只剩m个正整数为止，就是问题的答案。<br>进行操作最适合的数据结构为链表。</p><h3 id="Code-4">[Code]</h3><p>用结构体实现链表，查找非常慢。（建议不要看）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">abs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="keyword">return</span> x&lt;<span class="number">0</span>?-x:x; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n,m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s[maxn],cnt;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> x,<span class="keyword">const</span> <span class="keyword">int</span> y)</span></span>&#123; <span class="keyword">return</span> y&lt;x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">sort</span>(s,s+cnt,cmp);</span><br><span class="line">  <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    <span class="keyword">if</span>(s[i]&gt;<span class="number">0</span>) res+=s[i];</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> being[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> x,no;</span><br><span class="line">  <span class="built_in">data</span>(<span class="keyword">int</span> a,<span class="keyword">int</span> b)&#123; x=a,no=b; &#125;</span><br><span class="line">  <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> data d) <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;d.x; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;data&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Chain</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> x,no;</span><br><span class="line">  Chain*nxt;</span><br><span class="line">  <span class="built_in">Chain</span>(<span class="keyword">int</span> a,<span class="keyword">int</span> b)&#123; x=a,no=b; nxt=<span class="literal">NULL</span>; &#125;</span><br><span class="line">  <span class="function">Chain*<span class="title">find</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;nxt-&gt;no==k) <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> nxt-&gt;<span class="built_in">find</span>(k);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,Chain*&amp;c)</span></span>&#123;</span><br><span class="line">  c-&gt;nxt=<span class="keyword">new</span> <span class="built_in">Chain</span>(a,b); c=c-&gt;nxt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num=cnt,k=-m; cnt=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,now=<span class="number">1</span>;i&lt;num;i=now++)&#123;</span><br><span class="line">  <span class="keyword">while</span>(now&lt;num &amp;&amp; (<span class="keyword">long</span> <span class="keyword">long</span>)s[i]*s[now]&gt;=<span class="number">0</span>) s[i]+=s[now++];</span><br><span class="line">  s[cnt++]=s[i];</span><br><span class="line">  &#125;</span><br><span class="line">  Chain*head=<span class="number">0</span>,*tail=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,num=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!i &amp;&amp; s[i]&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span>(i==cnt<span class="number">-1</span> &amp;&amp; s[i]&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">      q.<span class="built_in">push</span>((data)&#123;<span class="built_in">abs</span>(s[i]),num&#125;);</span><br><span class="line">      <span class="keyword">if</span>(!num) head=tail=<span class="keyword">new</span> <span class="built_in">Chain</span>(s[i],num++);</span><br><span class="line">      <span class="keyword">else</span> <span class="built_in">insert</span>(s[i],num++,tail);</span><br><span class="line">      <span class="keyword">if</span>(s[i]&gt;<span class="number">0</span>) k++;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">    data d=q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">if</span>(being### [D.no])&#123; i--; <span class="keyword">continue</span>; &#125;</span><br><span class="line">    Chain*c;</span><br><span class="line">    <span class="keyword">if</span>(head &amp;&amp; head-&gt;no==d.no)&#123;</span><br><span class="line">      c=head;</span><br><span class="line">      being[c-&gt;nxt-&gt;no]=<span class="literal">true</span>,c-&gt;x+=c-&gt;nxt-&gt;x,c-&gt;nxt=c-&gt;nxt-&gt;nxt;</span><br><span class="line">      <span class="keyword">if</span>(c-&gt;x&lt;<span class="number">0</span>)&#123; being[c-&gt;no]=<span class="literal">true</span>; head=head-&gt;nxt; <span class="keyword">continue</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  c=head-&gt;<span class="built_in">find</span>(d.no);</span><br><span class="line">      being[c-&gt;no]=<span class="literal">true</span>,c-&gt;no=c-&gt;nxt-&gt;no,c-&gt;x+=c-&gt;nxt-&gt;x,c-&gt;nxt=c-&gt;nxt-&gt;nxt;</span><br><span class="line">      <span class="keyword">if</span>(c-&gt;nxt) being[c-&gt;nxt-&gt;no]=<span class="literal">true</span>,c-&gt;x+=c-&gt;nxt-&gt;x,c-&gt;nxt=c-&gt;nxt-&gt;nxt;</span><br><span class="line">      <span class="keyword">if</span>(c-&gt;x&lt;<span class="number">0</span> &amp;&amp; !c-&gt;nxt)&#123; being[c-&gt;no]=<span class="literal">true</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">q.<span class="built_in">push</span>((data)&#123;<span class="built_in">abs</span>(c-&gt;x),c-&gt;no&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  cnt=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(head)&#123;</span><br><span class="line">    <span class="keyword">if</span>(head-&gt;x&gt;<span class="number">0</span>) s[cnt++]=head-&gt;x;</span><br><span class="line">    head=head-&gt;nxt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">  <span class="keyword">if</span>(!m)&#123; <span class="built_in">putchar</span>(<span class="string">&#x27;0&#x27;</span>); <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">  <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,now=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    now+=a[i];</span><br><span class="line">    <span class="keyword">if</span>(i==n<span class="number">-1</span> || a[i]*a[i+<span class="number">1</span>]&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(now&gt;<span class="number">0</span>) sum++;</span><br><span class="line">      s[cnt++]=now,now=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(sum&gt;m) <span class="built_in">merge</span>();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">count</span>());</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;概述&lt;/h1&gt;
&lt;p&gt;说起来，链表是少数几个在正式学习之前就有点概念的数据结构。&lt;br&gt;
记得很久很久之前有一题，貌似是要插入什么，当时是用线段树(?)解决了问题，但是想，为什么数组之间插入元素这么不方便呢？&lt;br&gt;
然后就想到可以自己做个结构体用指针接起来，这样插入就可</summary>
      
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="BZOJ" scheme="http://codeplay0314.com/tags/BZOJ/"/>
    
    <category term="链表" scheme="http://codeplay0314.com/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>算法 | 矩阵乘法和高斯消元</title>
    <link href="http://codeplay0314.com/articles/2015-09-07/matrix-and-guess_elimination/"/>
    <id>http://codeplay0314.com/articles/2015-09-07/matrix-and-guess_elimination/</id>
    <published>2015-09-07T04:00:00.000Z</published>
    <updated>2015-09-07T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>高斯消元这个坑竟然现在才来补…<br>感觉这两个东西放在一起有一点点强行（雾</p><h1>矩阵乘法 - matrix</h1><h2 id="概述-6">概述</h2><p>概念什么的不用多说，n×m的矩阵乘m×q的矩阵=n×q的矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>×</mo><mi>b</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c[i][j]=\sum_{i,j,k}(a[i][k]×b[k][j])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1858em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">])</span></span></span></span>，大概就这样…<br>实现上<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>已足够。</p><h2 id="例题-2">例题</h2><h3 id="UVa-10870-Recurrences">[UVa 10870] Recurrences</h3><ul><li>[Description]<br>有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>×</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>×</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>…</mo><msub><mi>a</mi><mi>d</mi></msub><mo>×</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)=a_1×f(n−1)+a_2×f(n−2)…a_d×f(n−d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span>，给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub><mtext> </mtext><msub><mi>a</mi><mi>d</mi></msub><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d,a_1~a_d,f(1)~f(d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span>，求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，答案对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>取模。<br>[Hint]<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mtext>＜</mtext><msup><mn>2</mn><mn>31</mn></msup><mo separator="true">,</mo><mi>d</mi><mo>&lt;</mo><mn>16</mn><mo separator="true">,</mo><mi>m</mi><mo>&lt;</mo><mn>46340</mn></mrow><annotation encoding="application/x-tex">n＜2^{31},d&lt;16,m&lt;46340</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">＜</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">16</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">46340</span></span></span></span><br>[Solution]<br>有一种叫“相伴矩阵”的东西可以用来计算这种线性递推关系:</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A=\begin{bmatrix}0 &amp; 1 &amp; 0 &amp; \cdots &amp; 0 \\\cdots &amp; \cdots &amp; 1 &amp; \cdots &amp; \cdots \\\cdots &amp; \cdots &amp; \cdots &amp; 1 &amp; 0 \\0 &amp; \cdots &amp; \cdots &amp; 0 &amp; 1 \\a_1 &amp; a_2 &amp; \cdots &amp; \cdots &amp; a_n \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.0001em;vertical-align:-2.75em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-2.311em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.458em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.6667em' height='2.416em' style='width:0.6667em' viewBox='0 0 666.67 2416' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V2416 H319z M319 0 H403 V2416 H319z'/></svg></span></span><span style="top:-6.5111em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-2.311em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.458em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.6667em' height='2.416em' style='width:0.6667em' viewBox='0 0 666.67 2416' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V2416 H263z M263 0 H347 V2416 H263z'/></svg></span></span><span style="top:-6.5111em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>另外，包含答案的矩阵Fn为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mi>n</mi></msub><mo>=</mo><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>d</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F_n=[f(n−d) | | | f(n−1) f(n) ]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mord">∣∣∣</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)]</span></span></span></span></span></p><p>递推式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>×</mo><msub><mi>F</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">F_n=A×F_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>,也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>n</mi></msub><mo>=</mo><msub><mi>F</mi><mi>d</mi></msub><msup><mi>A</mi><mrow><mi>n</mi><mo>−</mo><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F_n=F_dA^{n-d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9991em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>用快速幂求解即可。</p><h3 id="LA-3704-Cellular-Automaton">[LA 3704] Cellular Automaton</h3><ul><li>[Description]<br>n个数组成一个环，给定距离d，每次操作将每个数变为距离这个数不超过d的数操作之前的值之和，问k此操作后环上值的情况，答案对m取余。</li><li>[Hint]<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>500</mn><mo separator="true">,</mo><mi>k</mi><mo>&lt;</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup></mrow><annotation encoding="application/x-tex">n≤500,k&lt;10^7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">500</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span></li><li>[Solution]<br>这次“基矩阵”（随便取的一个名字）叫做循环矩阵。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A=\begin{bmatrix}1 &amp; 1 &amp; 0 &amp; \cdots &amp; 1 \\1 &amp; 1 &amp; 1 &amp; 0 &amp; \cdots \\0 &amp; 1 &amp; 1 &amp; 1 &amp; 0 \\\cdots &amp; 0 &amp; 1 &amp; 1 &amp; 1 \\1 &amp; \cdots &amp; 0 &amp; 1 &amp; 1 \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.0001em;vertical-align:-2.75em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-2.311em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.458em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.6667em' height='2.416em' style='width:0.6667em' viewBox='0 0 666.67 2416' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V2416 H319z M319 0 H403 V2416 H319z'/></svg></span></span><span style="top:-6.5111em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-2.311em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.458em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.6667em' height='2.416em' style='width:0.6667em' viewBox='0 0 666.67 2416' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V2416 H263z M263 0 H347 V2416 H263z'/></svg></span></span><span style="top:-6.5111em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>另外有个优化，我们发现，循环矩阵的第i行可由第i-1行“右移”得来，这样我们可以只计算第一行来推出整个矩阵，时间复杂度缩减到原来的1/n.</p><h1>高斯消元 - guess elimination</h1><h2 id="概述-7">概述</h2><p>高斯消元法最直接的应用，就是用来解n元n次方程。<br>以如下方程为例来模拟一下高斯消元的操作：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>x</mi><mo>+</mo><mi>y</mi><mo>−</mo><mi>z</mi><mo>=</mo><mn>8</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(1)</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn><mi>x</mi><mo>−</mo><mi>y</mi><mo>+</mo><mn>2</mn><mi>z</mi><mo>=</mo><mo>−</mo><mn>11</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(2)</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mn>2</mn><mi>z</mi><mo>=</mo><mo>−</mo><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(3)</mtext></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}2x+y−z=8, &amp; \text{(1)} \\−3x−y+2z=−11, &amp; \text{(2)} \\−2x+y+2z=−3 &amp; \text{(3)}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">8</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">11</span><span class="mpunct">,</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(1)</span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(2)</span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(3)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>现在将(1)式乘上相应的系数，用它加减(2)(3)来消去(2)(3)中间的x:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>x</mi><mo>+</mo><mi>y</mi><mo>−</mo><mi>z</mi><mo>=</mo><mn>8</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(4)</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>y</mi><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>z</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>(5):(1)</mtext><mo>×</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>+</mo><mtext>(2)</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>y</mi><mo>+</mo><mi>z</mi><mo>=</mo><mn>5</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(6):(1)+(3)</mtext></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}2x+y−z=8, &amp; \text{(4)} \\\frac{1}{2}y+\frac{1}{2}z=1, &amp; \text{(5):(1)}\times \frac{3}{2}+\text{(2)} \\2y+z=5 &amp; \text{(6):(1)+(3)}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">8</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(4)</span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(5):(1)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord text"><span class="mord">(2)</span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(6):(1)+(3)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>现在将(2)式乘上相应的系数，用它加减(3)来消去(3)中间的y:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>x</mi><mo>+</mo><mi>y</mi><mo>−</mo><mi>z</mi><mo>=</mo><mn>8</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(7)</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>y</mi><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>z</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(8)</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>(9):(5)</mtext><mo>×</mo><mn>4</mn><mo>−</mo><mtext>(6)</mtext></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}2x+y−z=8, &amp; \text{(7)} \\\frac{1}{2}y+\frac{1}{2}z=1, &amp; \text{(8)} \\z=-1 &amp; \text{(9):(5)}\times 4-\text{(6)}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">8</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(7)</span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(8)</span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">(9):(5)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord text"><span class="mord">(6)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>最终得到的方程组中，倒数第i个方程有i个未知数，从最后一个方程开始解，带到前面的式子中，这样就可以解出所有未知数。</p><h2 id="优化">优化</h2><p>因为实数运算的问题，高斯消元法对精度的控制不是很佳，但在一般情况下已经完全够用（若要求更高，请参看高斯-约当消元法和选主元消去法）。<br>但我们可以尽量优化高斯消元的精度，一是尽量少使用中间变量，二是处理第i行时，可优先把当前第i个未知数系数绝对值大的提前到第i个来处理（方程顺序并不影响结果），这样可提高数值稳定性。</p><h2 id="代码参考">代码参考</h2><p>用矩阵来实现，准确时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mfrac><msup><mi>n</mi><mn>2</mn></msup><mn>3</mn></mfrac><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mfrac><mn>3</mn><mi>n</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\frac{n^2}{3}+n^2−\frac{3}{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3629em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>.</p><h2 id="例题-3">例题</h2><h3 id="UVa-10828-Back-to-Kernighan-Richie">[UVa 10828] Back to Kernighan-Richie</h3><ul><li>[Description]<br>给定一个n(n≤100)个点的有向图，从结点1开始访问，结点到每个后继结点的概率相同，当结点没有后继时访问结束。问每个点的期望执行次数。</li><li>[Solution]<br>设结点x的期望执行次数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sum(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>,有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mtext>y|y为x的前驱</mtext></msub><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>d</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sum(x)=\sum_{\text{y|y为x的前驱}}sum(y)/d(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2247em;vertical-align:-0.4747em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2253em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">y|y</span><span class="mord cjk_fallback mtight">为</span><span class="mord mtight">x</span><span class="mord cjk_fallback mtight">的前驱</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4747em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>,其中d(y)为结点y的出度，这个应该很好理解。<br>那我们是不是就可以直接列方程再高斯消元求解了呢？并不行。<br>因为方程组不一定有解啊…所以我们先要去除无解（期望值为0）和解出来为无穷的结点，它们分别对应结点1无法到达的点和无法到达结束结点的点，用floyd传递闭包预处理就可以辣。<br>其实这一步据说可以用高斯-约当直接处理，以后再说吧er…</li></ul><h3 id="UVa-11542-Square">[UVa 11542] Square</h3><ul><li>[Description]<br>给定n(n≤100)个64位整数，问有几种选数方案，使得选出来的数乘积为完全平方数。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;高斯消元这个坑竟然现在才来补…&lt;br&gt;
感觉这两个东西放在一起有一点点强行（雾&lt;/p&gt;
&lt;h1&gt;矩阵乘法 - matrix&lt;/h1&gt;
&lt;h2 id=&quot;概述-6&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;概念什么的不用多说，n×m的矩阵乘m×q的矩阵=n×q的矩阵，&lt;span class=&quot;k</summary>
      
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="数学相关" scheme="http://codeplay0314.com/tags/%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/"/>
    
    <category term="矩阵乘法" scheme="http://codeplay0314.com/tags/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/"/>
    
    <category term="高斯消元" scheme="http://codeplay0314.com/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>算法 | 置换及其应用</title>
    <link href="http://codeplay0314.com/articles/2015-09-02/permutation/"/>
    <id>http://codeplay0314.com/articles/2015-09-02/permutation/</id>
    <published>2015-09-02T04:00:00.000Z</published>
    <updated>2015-09-02T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天上数学课时比较清闲（主要是感觉逻辑用语没什么好学的），于是缓缓打开了大白书…<br>本来想看矩阵的…发现前面的内容就只有置换没看了，一时兴起就把置换解决掉…</p><!-- 感觉置换简直是优美极了！！！我在数学课上差点儿没笑出来= =不知为何，置换是如此有趣，简直像玩游戏一样。 --><h1>定义</h1><p>简单来说，置换是一个在正整数[1,n]到正整数[1,n]上的一一映射，将1,2,3…n变为a1,a2,a3…an，记为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}1 &amp; 2 &amp; 3 &amp; ... &amp; n \\a_1 &amp; a_2 &amp; a_3 &amp; ... &amp; a_n\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>也可用函数表示，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">f=\{a_1,a_2,a_3,…,a_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span><br>为了表示方便，常常将一个置换表示成几个循环乘积的形式。循环即为几个元素交替，例如(1,3,2)表示1→3,3→2,2→1.下面是一个用循环分解置换的例子。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{pmatrix}1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\3 &amp; 5 &amp; 1 &amp; 4 &amp; 2\end{pmatrix}=\begin{pmatrix}1 &amp; 3\end{pmatrix}\begin{pmatrix}2 &amp; 5\end{pmatrix}\begin{pmatrix}4\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><p>应该很好理解。显而易见，循环的计算满足交换律。<br>我们称循环的个数为循环节，如上图置换的循环节为3.</p><h1>计算</h1><p>置换间可定义乘法，如f={1,3,2},g={2,1,3} → fg={2,3,1}.<br>置换的乘法满足结合律，但不满足交换律。</p><h1>应用：等价类计数问题</h1><p>以下面问题为例，介绍两个定理。<br>给2×2的方格黑白染色，共有几种方法？答案显而易见，是如下图的16种。</p><p>但如果考虑“旋转同构”，将逆时针旋转90°，180°，或270°都相同的方案看做一种，答案就只有如下6种了</p><p>这就是等价类计数问题，也就是，题目中会定义一种等价关系，满足等价关系的所有元素被分为同一个等价类，他们共同为答案贡献1。<br>我们发现，等价关系满足自反性，对称性和传递性。</p><p>我们把F定义为一个置换集合，集合里元素乘积也在集合里，用它来描述等价关系。<br>如上面例子中，我们有F={①逆时针旋转0°,②逆时针旋转90°,③逆时针旋转180°,④逆时针旋转270°}，这样我们就可以用这个集合表示所有等价关系了。<br>需要注意的是，①②③并不能构成一个“置换群”，因为②×③=④并不在集合里。</p><p>对一个置换f,若一个元素经过置换后不变。则称它为f的不动点。</p><blockquote><p>Burnside 引理<br>计f的不动点数目为C(f),等价类集合数目为所有C(f)的平均值。</p></blockquote><p>如上面的例子，C(①)的不动点有1-16，C(②)的不动点有1,16,10,7，C(③)的不动点有1,16，C(④)的不动点有1,16，故根据Burnside 引理，等价的方案有(16+4+2+2)/4=6个。是不是很神奇呢？</p><p>而已知一个置换，怎么快速求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span>呢？<br>回想用循环表示置换，我们发现，若一个循环中所有元素状态相同，则一定有置换后不变。<br>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>分解为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m\cdot (f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span>个循环的乘积，每单个元素有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>种状态（如黑白染色是两种），有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>k</mi><mrow><mi>m</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">C(f)=k^{m\cdot (f)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">⋅</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，这就是Polya定理。<br>基础的知识就告一段落辣…</p><h1>例题</h1><h2 id="UVa-10294-Arif-in-Dhaka">[UVa 10294] Arif in Dhaka</h2><ul><li>[Description]<br>t种颜色的珠子中选n个串成间距相等的圆形项链。问若旋转后项链相同算一种，问有几种项链；旋转或翻转后（形态和位置）相同算一种，问有几种项链。</li><li>[Solution]<br>第一种较为简单。共有n种旋转的置换(旋转0~n-1个位置)，旋转i个位置的循环节为gcd(i,n)，所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><msub><mi>s</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mfrac><mrow><msup><mi>t</mi><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">ans_1=(\sum^{n−1}_{i=0}\frac{t^{gcd(i,n)})}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord mathnormal">an</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5067em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1617em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">d</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>第二种除了旋转，还有翻转。翻转需分类讨论，若n为奇数，共有n条对称轴，每条对称轴的循环节为n/2+1，所以总不动点数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>n</mi><mo>×</mo><msup><mi>t</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">x=n×t^{n/2+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>；若n为偶数，有n/2条对称轴串过珠子，每条对称轴的循环节为n/2-1，有n/2条对称轴不串过珠子，每条对称轴的循环节为n/2，总不动点数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>×</mo><mo stretchy="false">(</mo><msup><mi>t</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><msup><mi>t</mi><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=n/2×(t^{n/2−1}+t^{n/2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，得出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mn>2</mn><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mi>n</mi><mi>s</mi><mn>1</mn><mo>∗</mo><mi>n</mi><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">ans2=(ans1∗n+x)/2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">/2</span><span class="mord mathnormal">n</span></span></span></span>.</li></ul><h2 id="LA-3641-Leonardo’s-Notebook">[LA 3641] Leonardo’s Notebook</h2><ul><li>[Description]<br>给出26个字母的一个置换B，问是否存在一个置换A，满足A2=B.</li><li>[Solution]<br>给出B后我们可以分循环来讨论。<br>对于某一个循环a，若元素数n为奇数，我们不难找到一种方案：ai-&gt;ai+n/2+1，两次置换后得到ai-&gt;ai+1，这就是B.<br>而若n为偶数，我们同一个循环肯定不能“开根号”，但是我们发现，若有两个长度均为n的循环a,b，它们的乘积却可以。a={a1,a2…an},b={b1,b2…bn}，ab=(a1,a2…an)(b1,b2…bn)=(a1,b1,a2,b2…an,bn)×(a1,b1,a2,b2…an,bn).这样也有解。<br>这样，将B拆成循环进行判断即可。</li></ul><h2 id="UVa-11077-Find-the-Permutations">[UVa 11077] Find the Permutations</h2><ul><li>[Description]<br>给定n,k(k≤n≤21)，问有多少个n的全排列至少进行两个元素的互换操作才能变成{1,2…n}.</li><li>[Solution]<br>观察发现，全排列的一个循环交换有序需要循环元素个数-1次交换。<br>设f[i][j]表示i的全排列进行两个元素的互换操作才能变成{1,2…i}的个数，容易得到递推式</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f[i][j]=f[i−1][j]+f[i−1][j−1]∗(i−1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>f[i-1][j]表示直接把i放在最后，自成一个循环；f[i-1][j-1]表示把i插入任意一个循环，使这个循环得交换次数+1，因为可以插入任何一个位置，共有i-1种插法。边界为f[1][0]=1,其他f[1]={0}.<br>很善意地不要打高精度。</p><h2 id="LA-3510-Pixel-Suhffle">[LA 3510] Pixel Suhffle</h2><ul><li>[Description]<br>给n*n矩阵的矩阵定义8×2种操作（具体见题），给定一串命令，有多个操作组成，求至少经过多少次命令后矩阵才能恢复。</li><li>[Solution]<br>以前似乎做过一道一维简化版的…<br>就是直接模拟一遍操作，记录所有方格移动到的位置，然后找到所有循环。<br>设每个循环有x个元素，所以循环内的元素要恢复，就必须完成x的倍数次操作。<br>所以所有循环元素个数的最小公倍数即是问题的答案。<br>AC此题需要耐心。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天上数学课时比较清闲（主要是感觉逻辑用语没什么好学的），于是缓缓打开了大白书…&lt;br&gt;
本来想看矩阵的…发现前面的内容就只有置换没看了，一时兴起就把置换解决掉…&lt;/p&gt;
&lt;!-- 感觉置换简直是优美极了！！！我在数学课上差点儿没笑出来= =
不知为何，置换是如此有趣，简直</summary>
      
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="数学相关" scheme="http://codeplay0314.com/tags/%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/"/>
    
    <category term="置换" scheme="http://codeplay0314.com/tags/%E7%BD%AE%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>算法 | 字符串相关</title>
    <link href="http://codeplay0314.com/articles/2015-08-17/string/"/>
    <id>http://codeplay0314.com/articles/2015-08-17/string/</id>
    <published>2015-08-17T04:00:00.000Z</published>
    <updated>2015-08-17T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>坑什么的随便就挖好了。</p><h1>Trie - 字典树</h1><h2 id="概述-4">概述</h2><p>也叫前缀树，用来保存字符串集合。从根到每一个单词结点的路径就是一个单词。<br>模板见ACAM.<br>Trie还可以改进，可以将后缀相同的单词收束，学有余力来过来看。</p><h2 id="例1-LA3942-Remember-the-Word">例1 [LA3942] Remember the Word</h2><ul><li>[Description]<br>给定最多4000个长度不超过100的单词，将一个长度不超过300000的字符串拆解成单词有多少成拆发。</li><li>[Solution]<br>DP+Trie.先预处理哪些区间[i,j]是单词（枚举+判断需<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，我们可以直接从Trie下手），再线性转移。</li></ul><h2 id="例2-UVa11732-strcmp-Anyone">例2 [UVa11732] &quot;strcmp()&quot;Anyone?</h2><ul><li>[Description]<br>给定不超过4000个长度不超过1000的字符串，求他们两两公共前缀总和。</li><li>[Solution]<br>在Trie上操作。</li></ul><h1>MP - 最小表示法</h1><h2 id="概述-5">概述</h2><p>大半年前看过一遍然后完全不记得了啊，再看的时候傻逼得吓人qwq<br>字符串什么的就是容易忘…<br>一种判循环同构的工具。</p><h2 id="Code">[Code]</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MP</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">1</span>,k=<span class="number">0</span>,t;</span><br><span class="line">  <span class="keyword">while</span>(l&lt;n &amp;&amp; r&lt;n)&#123;</span><br><span class="line">  k=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(s[l+k]==s[r+k]) k++;</span><br><span class="line">  <span class="keyword">if</span>(s[l+k]&lt;s[r+k]) r=r+k+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> l=l+k+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(l==r) r++;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">max</span>(l,r)&gt;=n) t=<span class="built_in">min</span>(l,r);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=t;i&lt;t+n;i++) <span class="built_in">putchar</span>(s[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>KMP - 看*片</h1><h2 id="详述">详述</h2><p>请移步 &gt;&gt; <a href="/articles/2015-04-19/kmp/">KMP算法 | Knuth–Morris–Pratt algorithm</a></p><h2 id="例1-LA3026-Period">例1 [LA3026] Period</h2><ul><li>[Description]<br>求长度不超过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span>的字符串每个前缀的最长循环节，若不存在则不输出。</li><li>[Hint]<br>如串”aabaabaabaab”,ans[2]=1,ans[6]=2,ans[9]=3,ans[12]=4</li><li>[Solution]<br>非常有趣的题目，性质题。<br>计算字符串的next数组，若next[i]!=0 &amp;&amp; i%(i-next[i])==0，则有s[next[i]+1]~s[i]为循环节，进而算出循环次数。</li></ul><h1>EXKMP - 扩展看*片</h1><p>就是比KMP的同时求一个extend数组咯。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> next[maxn],extend[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn],len1,t[maxn],len2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EXKMP</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">-1</span>,a,p;i&lt;len1;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span> || i+next[i-a]&gt;=p)&#123;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span>) j=<span class="number">0</span>,p=i;</span><br><span class="line"><span class="keyword">while</span>(s[p]==t[j] &amp;&amp; p&lt;len1 &amp;&amp; j&lt;len2) p++,j++;</span><br><span class="line">extend[i]=j,a=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> extend[i]=next[i-a];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>Manacher - 马拉车</h1><p>选了一篇讲得比较清晰的 &gt;&gt; <a href="http://blog.csdn.net/xingyeyongheng/article/details/9310555">http://blog.csdn.net/xingyeyongheng/article/details/9310555</a><br>需要注意的是文中为当前匹配搭配i+k，i为能匹配到最远的中心位置。<br>还有就是s[0]初始化成未知字符防止while的的时候越界。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(s+<span class="number">1</span>),ans=<span class="number">0</span>;</span><br><span class="line">s[<span class="number">0</span>]=<span class="string">&#x27;*&#x27;</span>,s[<span class="number">2</span>*n+<span class="number">1</span>]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--) s[<span class="number">2</span>*i]=s[i],s[<span class="number">2</span>*i<span class="number">-1</span>]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,id=<span class="number">0</span>;i&lt;=<span class="number">2</span>*n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(id+p[id]&gt;i) p[i]=<span class="built_in">min</span>(p[<span class="number">2</span>*id-i],p[id]+id-i);</span><br><span class="line">  <span class="keyword">else</span> p[i]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(s[i+p[i]]==s[i-p[i]]) p[i]++;</span><br><span class="line">  <span class="keyword">if</span>(id+p[id]&lt;i+p[i]) id=i;</span><br><span class="line">  ans=<span class="built_in">max</span>(ans,p[i]<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br></pre></td></tr></table></figure><h1>ACAM - AC自动机</h1><p>ACAM=Trie+KMP<br>ACAM用于多个子串和母串的匹配，可以想到，KMP是线性结构上的字符串匹配，而AC自动机是在Trie上的匹配，详情见代码（过HDU2222测试）。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ACAM</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ACAM*nxt[<span class="number">26</span>],*fail;</span><br><span class="line">    <span class="built_in">ACAM</span>()&#123; val=<span class="number">0</span>; fail=<span class="literal">NULL</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) nxt[i]=<span class="literal">NULL</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;<span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">this</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) <span class="keyword">if</span>(nxt[i])&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;nxt[i]-&gt;<span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">delete</span> nxt[i];</span><br><span class="line">nxt[i]=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span>*s)</span></span>&#123;<span class="comment">//插入子串，操作同Trie</span></span><br><span class="line">ACAM*u=<span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> v=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(!u-&gt;nxt[v])</span><br><span class="line">u-&gt;nxt[v]=<span class="keyword">new</span> ACAM;</span><br><span class="line">    u=u-&gt;nxt[v];</span><br><span class="line">&#125;</span><br><span class="line">u-&gt;val++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getFail</span><span class="params">()</span></span>&#123;<span class="comment">//计算每个结点的适配结点Fail</span></span><br><span class="line">queue&lt;ACAM*&gt; q;</span><br><span class="line"><span class="keyword">this</span>-&gt;fail=<span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;nxt[i])&#123;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="keyword">this</span>-&gt;nxt[i]);</span><br><span class="line"><span class="keyword">this</span>-&gt;nxt[i]-&gt;fail=<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">ACAM*r=q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">ACAM*&amp;u=r-&gt;nxt[i],*v=r-&gt;fail;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> q.<span class="built_in">push</span>(u);</span><br><span class="line"><span class="keyword">while</span>(v!=<span class="keyword">this</span> &amp;&amp; !v-&gt;nxt[i]) v=v-&gt;fail;</span><br><span class="line">u-&gt;fail=v-&gt;nxt[i]?v-&gt;nxt[i]:<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">char</span>*s)</span></span>&#123;<span class="comment">//匹配</span></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">ACAM*k=<span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> c=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(k!=<span class="keyword">this</span> &amp;&amp; !k-&gt;nxt[c]) k=k-&gt;fail;</span><br><span class="line">    k=k-&gt;nxt[c]?k-&gt;nxt[c]:<span class="keyword">this</span>;</span><br><span class="line">    ACAM*k1=k;</span><br><span class="line">    <span class="keyword">while</span>(k1!=<span class="keyword">this</span> &amp;&amp; k1-&gt;val&gt;<span class="number">0</span>)&#123;</span><br><span class="line">ans+=k1-&gt;val;</span><br><span class="line">k1-&gt;val=<span class="number">-1</span>;</span><br><span class="line">k1=k1-&gt;fail;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1>SA- 后缀数组</h1><p>lz写了一个小时忘记保存，一瞬间差点跳出窗外。呵呵。不管了。<br>直接丢代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SA</span>&#123;</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">10000</span>+<span class="number">10</span>;</span><br><span class="line">  <span class="keyword">int</span> s[maxn];</span><br><span class="line">  <span class="keyword">int</span> sa[maxn],height[maxn],n;</span><br><span class="line">  <span class="built_in">SA</span>()&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">    n=<span class="built_in">strlen</span>(s);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">getSA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x[maxn],y[maxn],c[maxn];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) c[x[i]=s[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>;i++) c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--c[x[i]]]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>,m=<span class="number">2</span>,p=<span class="number">0</span>;k&lt;=n &amp;&amp; p&lt;n;k&lt;&lt;=<span class="number">1</span>,m=p)&#123;</span><br><span class="line">      p=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=n-k;i&lt;n;i++) y[p++]=i;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="keyword">if</span>(sa[i]&gt;=k) y[p++]=sa[i]-k;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) c[i]=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) c[x[y[i]]]++;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;m;i++) c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--c[x[y[i]]]]=y[i];</span><br><span class="line">      p=<span class="number">1</span>,y[sa[<span class="number">0</span>]]=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) y[sa[i]]=x[sa[i<span class="number">-1</span>]]==x[sa[i]] &amp;&amp; x[sa[i<span class="number">-1</span>]+k]==x[sa[i]+k]?p<span class="number">-1</span>:p++;</span><br><span class="line">      <span class="built_in">swap</span>(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">getHeight</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rank[maxn];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) rank[sa[i]]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,k=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(k) k--;</span><br><span class="line">      <span class="keyword">int</span> j=sa[rank[i]<span class="number">-1</span>];</span><br><span class="line">      <span class="keyword">while</span>(s[i+k]==s[j+k]) k++;</span><br><span class="line">      height[rank[i]]=k;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;sa;</span><br></pre></td></tr></table></figure><h1>SAM - 后缀自动机</h1><h1>PAM - 回文自动机</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;坑什么的随便就挖好了。&lt;/p&gt;
&lt;h1&gt;Trie - 字典树&lt;/h1&gt;
&lt;h2 id=&quot;概述-4&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;也叫前缀树，用来保存字符串集合。从根到每一个单词结点的路径就是一个单词。&lt;br&gt;
模板见ACAM.&lt;br&gt;
Trie还可以改进，可以将后缀相同的单词收束</summary>
      
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="KMP" scheme="http://codeplay0314.com/tags/KMP/"/>
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="弥天巨坑" scheme="http://codeplay0314.com/tags/%E5%BC%A5%E5%A4%A9%E5%B7%A8%E5%9D%91/"/>
    
    <category term="AC自动机" scheme="http://codeplay0314.com/tags/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
    <category term="Manacher" scheme="http://codeplay0314.com/tags/Manacher/"/>
    
    <category term="Trie" scheme="http://codeplay0314.com/tags/Trie/"/>
    
    <category term="后缀数组" scheme="http://codeplay0314.com/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/"/>
    
    <category term="后缀自动机" scheme="http://codeplay0314.com/tags/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
    <category term="回文自动机" scheme="http://codeplay0314.com/tags/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
    <category term="字符串" scheme="http://codeplay0314.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="扩展KMP" scheme="http://codeplay0314.com/tags/%E6%89%A9%E5%B1%95KMP/"/>
    
    <category term="最小表示法" scheme="http://codeplay0314.com/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>数据结构 | 树相关</title>
    <link href="http://codeplay0314.com/articles/2015-08-09/tree/"/>
    <id>http://codeplay0314.com/articles/2015-08-09/tree/</id>
    <published>2015-08-09T04:00:00.000Z</published>
    <updated>2015-08-09T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>树的重心与直径</h1><h2 id="树的直径">树的直径</h2><h3 id="定义">定义</h3><p>树的直径指树的简单最长路</p><h3 id="求法">求法</h3><p>两遍DFS，第一遍任取一点，找一个与这个点距离最远的点，可以证明这个点一定是直径的一个端点；第二遍从这个端点出发，找到离这个端点距离最远的点，这个点即为直径的另外一个端点。</p><h3 id="例题1">例题1</h3><ul><li>[Description]<br>给定一棵树，在树上任意放置三个点ABC，求路径A-B-C的最大值。</li><li>[Solution]<br>可以看出，A-B或B-C一定有一条是树的直径（不然可以调整到更优），所以找出树的直径后，枚举另外一个点的位置即可，3遍DFS解决。</li></ul><h3 id="例题2-BZOJ1912-APIO2010patrol">例题2 [BZOJ1912] APIO2010patrol</h3><ul><li>[Description]<br>求边权为1的树的最长链和不为最长链子链的次长链。</li><li>[Solution]<br>最长链就是树的直径咯，求出直径后，把直径上边的权值变为-1，即对答案的贡献为-1，再求一遍直径即可。</li></ul><h2 id="树的重心">树的重心</h2><h3 id="定义-2">定义</h3><p>使得去掉这个点后最大联通分块最小的点。</p><h3 id="意义">意义</h3><p>删掉后子树尽量平衡，在树分治的时候避免极端退化情况。</p><h3 id="性质">性质</h3><ul><li>以重心为根，所有子树的大小不超过树的大小的一半</li><li>树中所有点到某个点的距离和中，重心为最小（默认边权为1）</li><li>用一条边连接两棵树，新树的重心在原来两棵树重心之间的路径上</li><li>删掉或添加一个叶子结点，树的重心最多只会移动一条边</li></ul><p>(感觉可以出很多恶心题了)</p><h3 id="动态维护">动态维护</h3><p>【先等我学完LCT</p><h3 id="模板题-POJ1655">模板题 [POJ1655]</h3><h1>树的分治</h1><h2 id="点分治">点分治</h2><p>在无根树中选取一个结点作为根进行操作，再递归处理它的子树。<br>对于点分治，若每次选取树的重心，可控制复杂度在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>之内（所有子树大小都不会超过原树一半）。</p><h3 id="例题1-POJ1741-Tree">例题1 [POJ1741] Tree</h3><ul><li>[Description]<br>统计带权树上有多少点对的距离小于等于k.</li><li>[Solution]<br><a href="http://codeplay0314.gitcafe.io/2015/08/11/BZOJ1468/">http://codeplay0314.gitcafe.io/2015/08/11/BZOJ1468/</a></li></ul><h3 id="例题2-SPOJ-FTOUR2-Free-tour-II">例题2 [SPOJ FTOUR2] Free tour II</h3><ul><li>[Description]<br>给定一棵含有N 个结点的带权树，其中结点分为两类，黑点和白点。要求找到一条路径，使得经过的黑点数不超过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个，且路径长度最大。</li><li>[Solution]<br>要用到平衡树，之后再来看。】</li></ul><h2 id="边分治">边分治</h2><p>选取一条边，将树分为两个不相交的部分，再递归处理这两棵树。<br>对于点分治可控制复杂度在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>之内，而对于边分治，最坏情况下可能达到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，很少采用。</p><h3 id="复杂度的改进">复杂度的改进</h3><p>对于边分治，通过像点分治那样改变选边标准是没有作用的，因为最坏情况下无论选哪条边都是一样，那我们可以通过重构图来做到把每个点的度数控制到常数范围内。<br>之后讲解树链剖分例题2的时候会提到。</p><h2 id="链分治-树链剖分">链分治 - 树链剖分</h2><h3 id="解决的问题">解决的问题</h3><p>在一棵树上进行如下操作：两点间路径上边权的修改/求极值/求和。</p><h3 id="方法">方法</h3><p>如果是对数组进行操作，我们可直接用线段树来完成，然而边并不是线性的，树链剖分就是把维护对象从复杂的树形结构，转化简单的线性结构。<br>树链，指树上的路径；剖分，指将路径划分为重链和轻链。<br>给出几个定义：<br>重儿子：结点的一个子树最大的儿子 / 轻儿子：除了重儿子的其余儿子<br>重边：结点与重儿子间的连边 / 轻边：结点与轻儿子间的连边<br>重链：由重边连成的路径 / 轻链：由轻边连成的路径<br>这样划分，有如下性质：</p><ul><li>每个点属于且仅属于一条重路径</li><li>轻儿子的子树大小不大于原树大小的1/2</li><li>结点到根的路径上轻边和重链的个数都不超过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span><br>其中第三条由第二条推出（想一想，为什么）。<br>这样，通过维护轻边或者重链来维护整条路径，就能将原本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的复杂度降到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span><br>此时我们需要给边在线段树中编号，而且使得同一条重链中所有边在线段树中的编号是连续的。怎么做到呢？我们通过两遍DFS来实现。<br>第一遍，算出所有结点的fa,h_son,dep,order(父亲，重儿子，深度，子树大小)，这个简单，不再赘述。<br>第二遍，算出所有结点的top,num(结点所在链的顶端的边，此边在线段树中的编号)，方法是优先遍历第一遍求出的重儿子，重边的编号当然就在一起啦！<br>那我们怎么将路径u-v上所有轻边和重边一起找出来并处理呢？帅的人有这段代码。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,tp1=top[u],tp2=top[v];</span><br><span class="line"><span class="keyword">while</span>(tp1!=tp2)&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[tp1]&lt;dep[tp2])&#123; <span class="built_in">swap</span>(u,v); <span class="built_in">swap</span>(tp1,tp2); &#125;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,<span class="built_in">query</span>(num[tp1],num[u],<span class="number">0</span>));</span><br><span class="line">u=fa[tp1],tp1=top[u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(u==v) <span class="keyword">return</span> ans;</span><br><span class="line"><span class="keyword">if</span>(dep[u]&gt;dep[v]) <span class="built_in">swap</span>(u,v);<span class="comment">//在一条重链上</span></span><br><span class="line">ans=<span class="built_in">max</span>(ans,<span class="built_in">query</span>(num[son[u]],num[v]));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是树剖的全部内容。</p><h3 id="与树的分治的关系">与树的分治的关系</h3><p>我们发现，点的分治是每次删除一个点，边的分治是一次删除一边，而树链剖分，是在路径上一次删除一条链，我们可以说这是链的分治，而复杂度同样也有保证。</p><h3 id="模板题-SPOJ375-QTree">模板题 [SPOJ375] QTree</h3><h3 id="例题1-黑白树">例题1 黑白树</h3><ul><li>[Description]<br>你拥有一棵有n个结点白色的树——初始所有节点都是白色的。<br>接下来，你需要处理m条指令：<br>1.修改指令：改变一个给定结点的颜色（白变黑，黑变白）；<br>2.查询指令：询问从结点1 到一个给定结点的路径上第一个黑色结点编号。</li><li>[Hint]<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">n,m≤10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></li><li>[Solution]<br>仍然是在链上的操作，只不过维护对象变成了点，那能不能用树剖呢？当然可以。我们把给边标号改成按dfs序给点标号就好了。</li></ul><h3 id="例题2-SPOJ2666-Query-On-a-Tree">例题2 [SPOJ2666] Query On a Tree</h3><ul><li>[Description]<br>给定一棵包含n个结点的树，每个节点要么是黑色，要么是白色。要求模拟两种操作：</li></ul><ol><li>改变某个结点的颜色</li><li>询问最远的两个黑色结点之间的距离</li></ol><ul><li>[Hint]<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mo>−</mo><mn>1000</mn><mo>≤</mo><mtext>边权</mtext><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">n≤10^5,−1000≤边权≤1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1000</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord cjk_fallback">边权</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span></li><li>[Solution]<br>【正在写】</li></ul><h3 id="例题3-NOIP2013-货车运输">例题3 [NOIP2013] 货车运输</h3><ul><li>[Description]<br>给定一个n个点，m条边的无向图，求图上任意两点间路径上边权的最小值，若不存在路径路径则输出-1，q组询问。</li><li>[Hint]<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mi>q</mi><mo>≤</mo><mn>3</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">n≤10^5,m≤5×10^5,q≤3×10^5.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></li><li>[Solution]<br>最大生成树+树链剖分（因为不涉及边权修改，树上倍增也是不错的选择）模板题。</li></ul><h3 id="总结">总结</h3><p>在算法的常数方面，树的路径剖分算法是当中常数最小的算法，基于点的分治其次，基于边的分治常数较大。<br>在算法的应用范围方面，基于链的分治与基于点(边)的分治有所不同。前者的特点在于每次被删除结点的儿子必将作为下一次删除的链的头结点，这一点是基于点(边)的分治无法达到的。所以前者可以用来维护路径上的点(边)，但如果维护的对象是路径的长度，后者的能力更强。<br>与基于点的分治比较，基于边的分治在设计高效算法的思考难度上明显小于前者。<br>这几个算法各有所长，需要我们根据具体情况，灵活运用，以最佳的方式解决题目。</p><h1>treap</h1><h2 id="概述">概述</h2><p>treap，顾名思义，就是 tree+heap.<br>treap是一种平衡树，每个节点有两个值value和priority，根据value满足二叉搜索树的性质，同时根据priority满足堆的性质。value是固有的，priority的值是rand()随机出来的，这样保证树的期望深度为log(n).<br>操作与BST类似，再用左旋或右旋来维护堆的性质。</p><h2 id="支持的操作">支持的操作</h2><p>（默认为小根堆）</p><h3 id="插入">插入</h3><p>先按BST插入结点，再进行如下操作直到满足要求为止：若priority值比父节点小，为左儿子则进行右旋，否则左旋，重复操作到比父节点大为止。</p><h3 id="查找-存在性-极值">查找(存在性/极值)</h3><p>同BST.</p><h3 id="修改">修改</h3><p>// 同BST.</p><h3 id="删除-给定值-极值">删除(给定值/极值)</h3><p>先查找到位置，若为叶子则直接删除，否则为左儿子则左旋，否则右旋，直到变成叶结点为止。</p><h3 id="分离">分离</h3><p>在需要分离的地方插入一个节点，将其旋至根再删除，左右两个子树就是分离出来的两个treap.</p><h3 id="合并">合并</h3><p>与分离互为逆运算，需满足其中一个treap的值都小于另外一个treap的结点的值。<br>添加一个根，将两棵树作为左右子树，再删除根即可。</p><h1>splay</h1><h2 id="概述-2">概述</h2><p>splay也是一种平衡树，虽然速度略慢于treap，但能力是要大于treap的，例题里会提到。<br>splay也是通过左旋(zig)和右旋(zag)来使得平衡，它行动的出发点是要把被操作的点选至根，可以证明，每次操作的复杂度均摊下来为log(n).</p><h2 id="支持的操作-2">支持的操作</h2><p>（有自底向上的splay和自顶向下的splay，这里以自底向上为准）</p><h3 id="伸展">伸展</h3><p>将结点旋至根，若当前不为根，不断分为如下情况进行操作：<br>若父节点为根，为左儿子就右旋(zag)，否则左旋(zig)。<br>若结点为左儿子，父节点为左儿子，连续进行两次右旋(zag-zag)<br>若结点为右儿子，父节点为右儿子，连续进行两次左旋(zig-zig)<br>若结点为右儿子，父节点为左儿子，先左旋再右旋(zig-zag)<br>若结点为左儿子，父节点为右儿子，先右旋再左旋(zag-zig)</p><h3 id="插入-2">插入</h3><p>先按BST插入结点，再对此结点进行伸展。</p><h3 id="查找-存在性-极值-2">查找(存在性/极值)</h3><p>同BST查找，再对此结点进行伸展。</p><h3 id="修改-2">修改</h3><p>同BST修改，再对此结点进行伸展。</p><h3 id="删除-给定值-极值-2">删除(给定值/极值)</h3><p>先伸展此结点，此时结点位于根，直接去掉根，现有两个子树。<br>对左子树进行“查找最大值”的操作，此时最大值将位于根，且没有右子树，将原来的右子树接上即可。</p><h3 id="分离-2">分离</h3><p>在需要分离的地方插入一个节点，将其旋至根再删除，左右两个子树就是分离出来的两个treap.</p><h3 id="合并-2">合并</h3><p>与分离互为逆运算，需满足其中一个treap的值都小于另外一个treap的结点的值。<br>添加一个根，将两棵树作为左右子树，再删除根即可。</p><h1>prufer编码</h1><p>详见 &gt;&gt; <a href="http://codeplay0314.gitcafe.io/2015/06/22/BZOJ1005/">http://codeplay0314.gitcafe.io/2015/06/22/BZOJ1005/</a><br>有讲解同时也是经典题。</p><h1>zkw线段树</h1><p>在此Orz zkw神犇。<br>一种线段树的非递归实现方法，易理解且实现简单。<br>看心情写或不写代码。</p><h1>可并堆</h1><h2 id="概述-3">概述</h2><p>堆都是可并的啊…为什么要叫可并堆呢…这跟“我忍俊不禁地笑了”是一种姿势吧er…真实的名字大概是“优并堆”（雾<br>一般的堆合并操作是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的，而可并堆可以做到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，比较简单易懂的是左偏树，由斜堆进化而来，插/删/合并都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，查询最小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>；以后心情好再看斐波那契堆，除了删除结点，其他所有操作都可优化到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>.<br>左偏树结构跟普通堆并没有太大区别，插入结点可看做一个结点的树和原树merge,这样保证了左偏的性质。</p><h2 id="例题">例题</h2><h3 id="模板题1-ZOJ-2334-Monkey-King">模板题1 [ZOJ 2334] Monkey King</h3><h3 id="模板题2-BZOJ-1455-罗马游戏">模板题2 [BZOJ 1455] 罗马游戏</h3><h1>Link Cut Tree</h1><h1>虚树</h1><h1>替罪羊树</h1><h1>树套树</h1><h1>朱刘算法</h1><h1>可持久化线段树</h1><h1>可持久化字典树</h1><h1>附录 - 参考资料</h1><p>《分治算法在树的路径问题中的应用》 —— IOI2009 中国国家集训队论文 长沙市雅礼中学 漆子超<br>《统计的力量》 —— 清华大学 张琨玮<br>《算法竞赛入门经典 训练指南》 —— 刘汝佳</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;树的重心与直径&lt;/h1&gt;
&lt;h2 id=&quot;树的直径&quot;&gt;树的直径&lt;/h2&gt;
&lt;h3 id=&quot;定义&quot;&gt;定义&lt;/h3&gt;
&lt;p&gt;树的直径指树的简单最长路&lt;/p&gt;
&lt;h3 id=&quot;求法&quot;&gt;求法&lt;/h3&gt;
&lt;p&gt;两遍DFS，第一遍任取一点，找一个与这个点距离最远的点，可以证明这个点一</summary>
      
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="algorithm" scheme="http://codeplay0314.com/tags/algorithm/"/>
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="tree" scheme="http://codeplay0314.com/tags/tree/"/>
    
    <category term="data structure" scheme="http://codeplay0314.com/tags/data-structure/"/>
    
    <category term="LCT" scheme="http://codeplay0314.com/tags/LCT/"/>
    
    <category term="prufer编码" scheme="http://codeplay0314.com/tags/prufer%E7%BC%96%E7%A0%81/"/>
    
    <category term="splay" scheme="http://codeplay0314.com/tags/splay/"/>
    
    <category term="treap" scheme="http://codeplay0314.com/tags/treap/"/>
    
    <category term="zkw线段树" scheme="http://codeplay0314.com/tags/zkw%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="主席树" scheme="http://codeplay0314.com/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    
    <category term="可并堆" scheme="http://codeplay0314.com/tags/%E5%8F%AF%E5%B9%B6%E5%A0%86/"/>
    
    <category term="可持久化字典树" scheme="http://codeplay0314.com/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    
    <category term="替罪羊树" scheme="http://codeplay0314.com/tags/%E6%9B%BF%E7%BD%AA%E7%BE%8A%E6%A0%91/"/>
    
    <category term="朱刘算法" scheme="http://codeplay0314.com/tags/%E6%9C%B1%E5%88%98%E7%AE%97%E6%B3%95/"/>
    
    <category term="树套树" scheme="http://codeplay0314.com/tags/%E6%A0%91%E5%A5%97%E6%A0%91/"/>
    
    <category term="树的分治" scheme="http://codeplay0314.com/tags/%E6%A0%91%E7%9A%84%E5%88%86%E6%B2%BB/"/>
    
    <category term="树的重心与直径" scheme="http://codeplay0314.com/tags/%E6%A0%91%E7%9A%84%E9%87%8D%E5%BF%83%E4%B8%8E%E7%9B%B4%E5%BE%84/"/>
    
    <category term="树链剖分" scheme="http://codeplay0314.com/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
    <category term="虚树" scheme="http://codeplay0314.com/tags/%E8%99%9A%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>旅行 | 三亚</title>
    <link href="http://codeplay0314.com/articles/2015-08-02/trip-to-sanya/"/>
    <id>http://codeplay0314.com/articles/2015-08-02/trip-to-sanya/</id>
    <published>2015-08-06T04:00:00.000Z</published>
    <updated>2015-08-06T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>策划1月之久的三亚旅游终于到了啊啊啊啊啊，一定要给小伙伴寄好多好多明信片  = =  ，于是前一天晚上发了条说说，然后竟然要给14个小伙伴寄！高高兴兴把一垛明信片收进包里–</p><h1>[Day 1] 2015.08.02</h1><p>清早激动地起床拿起装备到黄花机场侯机，中午的飞机  = =</p><p>临飞前发了一条说说保佑不要失联(雾</p><p><img src="/image/posts/trip-to-sanya/1.jpg" alt=""></p><p>教会elba后和zyj在飞机上联排打UNO，从头玩到尾。</p><p>飞机上GB靠着wyy的肩睡着了，TB冲到每个人面前大肆宣扬自己做电灯泡的感受，正当我们准备拍照，GB醒了，于是作罢…</p><p>快降落时拍到两色海交融的地方，美极了。</p><p><img src="/image/posts/trip-to-sanya/2.jpg" alt=""></p><p>实在是…</p><p>到了之后几经转车，到了铂尔曼酒店，在大堂等候的时候，看到了对面的海，瞬间心情就舒畅了——</p><p>到房间安顿好，海景房！！！超级漂亮！！！</p><p><img src="/image/posts/trip-to-sanya/3.jpg" alt=""></p><p>尝试连接WIFI，连是连上了，但是网速超级慢，限制了100k/s，无限制的要80RMB/day，然而elba当即就买了三天的  = =</p><p>去833先打了几盘三国杀，就被叫去吃饭。</p><p>已然傍晚，于是tb爸爸er找了一家火锅店，大家都吃得很嗨，各种奇怪的**，然而我并是觉得跟湖南的差太多了！！！并没吃太饱，还调侃了gbwyy几句。</p><p>回到酒店天已经黑了，决定去宾馆的露天淡水泳池游泳。</p><p>我们穿着浴袍先在海边散了散步，这是这次旅游中第一次接触到海水，有点刺骨。我们脱了鞋子在沙滩上走，沙子超级超级超级软超级舒服，大概走了1000m往回走。然而elba自带的水仗特效溅起巨浪在其他人身上，引发了世纪水战，然后就在海滩奔跑戏水，感觉无比舒畅。</p><p>天比较黑无法聚焦，只能看到淡淡的海浪-</p><p>到宾馆找了个人比较少的泳池下水了，接着刚才又开启水仗，就这么打了一两个小时，因为大家取了眼镜都不知道谁是谁，首先碰到一个人要问清楚了再开始打  = =</p><p>虽然玩到10点多，但今天还是没有去到海边，简单冲洗后，833又开启三国杀，而<br>lfw,elba,zx在用买来的网飞，gbwyy *</p><p>到833发现lfw在泡澡，下附美照一张</p><p><img src="/image/posts/trip-to-sanya/4.jpg" alt=""></p><p>12点回到自己房间，robin在打游戏，我猛然记起还要写明信片，所以尝试写了一张根本写不动，又比较困怏怏睡着了。</p><h1>[Day 2] 2015.08.03</h1><p>一清早被我妈敲门叫起，发现我是起得最早的一个  = =</p><p>酒店免费供应早餐，非常不错（然而后来才知道这是当天吃得最好的一餐了）。</p><p>在完全不知道的情形下，我们被告知今天要去蜈支洲岛。早上出发比较晚，然后人山人海又要排队，我们12点才上岛  = =</p><p>蜈支洲岛上有很多娱乐项目，都是比较刺激的那种（例如拖伞，摩托艇，冲浪…），还有潜水。精品潜水980RMB/人，其他项目平均三四百一人，已然一副玩不起的样子，然后被告知有VIP套票，1399包干，不用排队，随意玩，我们想想应该还是玩得回来，就尝试了下当权限狗的快感2333333</p><p>果然看别人排队自己长驱直入的感觉非常爽啊，我们决定先把980玩掉再来吃饭。一些准备工作大约有两个小时，才能真正入海。</p><p>此时才发现VIP也要排VIP的对啊，大家都是权限狗  = =</p><p>拿了包鱼食入海了…教练显然我尝试呼吸，我速度一遍过，想多在海里潜一潜，然后就带我下深水了，好多好多好多鱼！！！我非常小心用我的鱼食，想想还有一个小时嘛，一下用完了就不好玩了，然后实力一点一点的下潜。海水一股冷一股热，难道这就是传说中冷暖流交汇之处？慢慢越来越深了，水底红色的珊瑚已清晰可见（其实海水有点浑浊，只能看到一块红色），这时耳朵有点胀，于是向上做了个手势示意先向上一米适应适应，结果日狗啊！教练直接把我拖出了水面…</p><p>他问我怎么了，我说没事啊…很无语…在水面上看到zyj，打了个招呼。</p><p>然后又一次下潜，同样的状况，这次比较深，然而快到底时我耳朵又比较胀，准备用之前叫我的方法调整一下，然而过程比较纠结，并没有什么卵用，我就指了指上，想等适应了再深潜，结果TM又把我拖出来了，这回看到了zyj/robin，又打了个招呼，zyj的教练问zyj有没有女朋友了，我顺口答了个有23333</p><p>鱼食还有大半包，准备再下去，结果发现，我们都在往岸边走，日狗啊！说好的一个小时呢？这最多10-20分钟啊，我鱼食还有一大半啊！欸，没办法，我们一起泱泱上岸了。</p><p>大家交流经历，原来都看到珊瑚一动一动的了  = =  lfw还畸形地拔了两根  = =  我早知道时间这么短直接一头栽到底啊日狗日狗，等于就看了几条鱼  = =</p><p>大家准备乘船回去换衣服，突然发现TB不见了。TB是第一个下水的，然而还没有上来…很无语，我们猜测她是先走了还是还没上来，并不知道，等了10分钟，觉得她不应该还在水里吧er，于是就走了。</p><p>我们商量着要是TB先走了就把她a了。</p><p>回去换了衣服急急忙忙吃午饭，已然3点，发现玩不了几个项目了  = =  饭吃的超级快，没想到吃饭的时候TB回来了，问她怎么回事，她准备上岸的时候也发现时间短了，于是强行跟教练说，这肯定没到时间啊，我还要潜，于是强行又潜了半个小时  = =</p><p>醉了醉了，欸也不纠结了，赶快去玩别的项目。</p><p>我们准备去骑摩托艇，发现人暴多，根本排不上队，于是先玩了旁边的的动感飞艇，据说时速100迈，世界上只有两辆，现运行的只有着一辆，船上有点挤，一个转弯就把旁边的人压成沙丁鱼，其实不是很刺激，只是360°大转弯的时候效果超级炫酷，感觉冲上了船尾打出的浪花，但其实感觉就跟坐车差不多。我还冒着生命危险（并没有）双手拿着手机拍照，手机放在防水袋里挂在脖子上了，所以并不怕掉，这时lfw在我右边唱起了best of me  = =  ，我便录了段短视频（当然不是拍他），然后愉快地上岸了。</p><p>然后去玩下一个项目，小飞鱼就在旁边，人也比较少，我们就排。小飞鱼就是一个摩托艇拖着两个浮着的气垫玩漂移。排队的时候，后面四个人被导游叫去玩大飞鱼，就只有我跟lfw排了，正好是两人一座。</p><p>上船之前工作人员强行我们摘掉眼镜，我们本来是拒绝的，但强制要求也就没办法了。小飞鱼玩得比快艇刺激多了，骑摩托艇的绝对是个老死机，各种让你飞起来，做圆周运动，把浪全都溅你身上，就是气垫一跳一跳打在海面屁股有点痛  = =</p><p>上岸后庆幸没有强行戴眼镜  = =  然后裤子全湿了，一摸，maya!手机还在口袋里，已然泡了海水了qwq，竟然打不开，然后尝试开机未果，心情一下子低落很多，想起了我以前把手机掉到湖里的经历  = =  不会又要废掉一部手机吧er。以前泡了水完全没事啊，这次怎么泡了海水不到1分钟就挂了，想了想，泡的是超级导电的海水，肯定是主板烧坏了  = =</p><p>欸欸欸lfw还在嚷嚷你给我拍的唱歌的视频都没了  = =  我简直拒绝</p><p>暂时先不管吧欸，玩下一个项目，跑到拖伞那里，发现已然关门了，冲浪那里，已经不待客了，发现项目要么都在排队，要么已经关门了  = =  于是作罢，今天就只玩了三个项目。</p><p>简单冲淡之后，又当了回权限狗挥别排队的人群上了回家的船。</p><p>这样安慰自己：至少1399玩回来了  = =</p><p>然后iPhone 6实力坏了，没发现day2都没照片嘛  = =  都没辣！</p><p>回码头上有很多小朋友在卖海星，我就买了个，比较漂亮，20RMB，然而味道有点恶心。</p><p>晚饭去的一家小店子吃的，各种不好吃，海鲜一般般，然后其他菜比如辣椒炒肉都有一股海鲜味，土豆丝实力放白醋也是醉了，zyj还对海鲜过敏，实力没吃什么东西，全靠今天的早餐撑过一天。</p><p>坐神州回宾馆，原说好今晚去唱K，但大家都比较累了，于是作罢。zyj竟然实力组织我们打国战，虽然最终只有5个人参与了，但是还是玩到12点。</p><p>回房间准备写明信片，发现手机烂了啊卧槽，地址都在里面，欸但是不写就没时间寄了，今天先写好内容吧er,要是明天能开机再把地址填上。</p><p>写了一小时睡了。</p><h1>[Day 3] 2015.08.04</h1><p>吸取昨天教训，今天起得比较早。被告知要下海游泳，穿着沙滩鞋出门。</p><p>结果第一站是森林公园，爬山啊卧槽！我这鞋也是醉了。还好大部分时间都是电瓶车。</p><p>在亚龙湾边上，风景美得别致，刚上山时被蚊子咬了很多口，找gb要了清凉油后好了很多。</p><p>这是《非诚勿扰2》主要拍摄地点之一，于是我们一路调侃gb&amp;wyy。</p><p>并没有什么卵啊，然后去了一个观景台，风景虽然很美，但是没有很让人触动。，过了个过江龙铁索桥，风景是很别致，然而人挤人，后面还是elba，我到桥正中央还是没敢拿出手机。</p><p><img src="/image/posts/trip-to-sanya/5.jpg" alt=""></p><p>然后坐车到山顶，被强行带到一个小黑屋被安利了各种茶之后，然后被带到茶庄，然后竟然有几个人中了安利我也是醉了，实力买了几百块的茶。<br>zyj妈妈实力百度出各种坑人的地方，然后大家都笑罢。</p><p>到了山顶的观景台，首先台上有一条龙，右手有一个球，说是象征有求必应，然后利用错位拍手拖球的照片。我给我妈得正好那样，然而她给我拍并找不到什么正确的位置，完全没拍好sigh</p><p><img src="/image/posts/trip-to-sanya/6.jpg" alt=""></p><p>然后到了山顶的观景台，绝对是我这几天看到的最美的风景，当时简直感觉自己要死在这里了，虽然效果没那么好，但海天一色简直美炸回家之后用新get的ps技能试了一下，效果还不错  = =</p><p><img src="/image/posts/trip-to-sanya/7.jpg" alt=""></p><p>然后吃饭之前又被带去安利咖啡，不过觉得这个比较实在，就买了一罐海盐咖啡，毕竟只有这里才有。然后我妈买了超级多的糖，各种糖，加起来几百了。</p><p>终于可以吃饭了！一般般，勉强能吃，但蒸蛋好好吃啊！吃了好多。</p><p>然后坐车准备下山去海边，路上听lfw吹逼他小时候的传奇经历，什么吃电池，掉耳朵，开摩托艇到岸都看不见的海中央翻了船，高烧40度一个星期，我们觉得这一定是他发高烧的幻觉  = =</p><p>然后到了海边，导游又给我们安利亚龙湾的潜水，说完全保证时间，五种世界顶级珊瑚，而且只要500RMB，说实话我有点动心了，然而觉得又去潜水不太好，然后就跟其他人一起下海游泳。</p><p>只有TB实力还要去潜，自己便去了。</p><p>我们在海里玩，海也是美得醉，从浅黄到湖蓝渐变，附照一张海里实力打水仗，教wyy和wwy游泳，准备a了zyj未果，差点自己被a了，不过单手a了lfw，脱了lfw裤子，还把一把沙子灌到lfw的裤子里23333挺开心的。</p><p><img src="/image/posts/trip-to-sanya/8.jpg" alt=""></p><p>TB回来后说后悔了，完全没昨天的好看，水还比较浑，980还是980 233333。</p><p>晚上实力找了家湘菜馆，虽然不是很辣，但菜品都是湖南的，这是大家吃的最干净的一次了，虽然也是没吃饱，但是是因为没菜了。</p><p>出了饭店，看到夕阳入海，简直是只有明信片上才能看到的场景啊，又一次被美醉</p><p><img src="/image/posts/trip-to-sanya/9.jpg" alt=""></p><p>晚上…K歌！K歌！K歌！K歌！K歌！K歌！K歌！K歌！K歌！K歌！K歌！</p><p>走了半个小时到市区，是一个比较垃圾的KTV，首先进去就点uptown funk结果没有，然后从8点一直唱到12点从头嗨到尾，各种神曲  = =  还点了情歌王祝福gb wyy forever love，gb一直闷闷不乐的样子，不过我们很嗨！感觉喝了两三瓶啤酒还没点反应，lfw唱了起码50+，嗓子实力爆炸。</p><p>回去都没力了，看了看晒了一天的手机，仍然开不了机，决定不写算了sigh,就要身败名裂了。</p><h1>[Day 4] 2015.08.05</h1><p>在三亚最后一天了，睡得比较晚，10点才起，试图开手机未果，去吃早餐，没想到还遇到高峰期，还要排队，吃得胀成狗，吃完就11点了，打了一盘三国杀，因为12点要退房，就去清东西了，结果海星放在lfw那里忘记拿了，实力丢在宾馆。</p><p>中午在宾馆饭店吃，贵成狗。一碗白米饭10RMB，小菜88RMB起，还不好吃，不过我们开了10人狼人还是蛮好玩的，我8盘当了5盘平民。</p><p>然后坐车去机场啦，侯机时玩了几盘狼人，就上飞机，飞机上大家都睡了，我中途起来玩了几盘UNO，很快就到长沙了。</p><p>长沙真是热多了，三亚只要不在太阳底下还是蛮凉快的，人也比较少（工作人员说夏天是淡季？），市中心也不堵车，晚上ysp妈妈请我们吃饭，终于吃到正宗湘菜了（泪流满面)，又开了几局谁是卧底，玩的不是很好。</p><p>然后大家就各回各家了，三亚之行就此结束。</p>]]></content>
    
    
    <summary type="html">Trip tp Sanya: 2015/08/02 ~ 2015/08/05</summary>
    
    
    
    <category term="life" scheme="http://codeplay0314.com/categories/life/"/>
    
    
    <category term="traveling" scheme="http://codeplay0314.com/tags/traveling/"/>
    
    <category term="三亚" scheme="http://codeplay0314.com/tags/%E4%B8%89%E4%BA%9A/"/>
    
  </entry>
  
  <entry>
    <title>算法 | 组合数学八题</title>
    <link href="http://codeplay0314.com/articles/2015-06-21/8-questions-of-combinatorial-mathematics/"/>
    <id>http://codeplay0314.com/articles/2015-06-21/8-questions-of-combinatorial-mathematics/</id>
    <published>2015-06-21T04:00:00.000Z</published>
    <updated>2015-06-21T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>来自朱全民老师PPT</p><h1>Description</h1><p>（样例：n = 3, m = 2）</p><ul><li><p>A<br>给定N个不同的球，放进M个不同的盒子，盒子允许为空，有多少种方案？<br>样例输出：8</p></li><li><p>B<br>给定N个不同的球，放进M个不同的盒子，盒子不允许为空，有多少种方案？<br>样例输出：6</p></li><li><p>C<br>给定N个不同的球，放进M个相同的盒子，盒子允许为空，有多少种方案？<br>样例输出：4</p></li><li><p>D<br>给定N个不同的球，放进M个相同的盒子，盒子不允许为空，有多少种方案？<br>样例输出：3</p></li><li><p>E<br>给定N个相同的球，放进M个不同的盒子，盒子允许为空，有多少种方案？<br>样例输出：4</p></li><li><p>F<br>给定N个相同的球，放进M个不同的盒子，盒子不允许为空，有多少种方案？<br>样例输出：2</p></li><li><p>G<br>给定N个相同的球，放进M个相同的盒子，盒子允许为空，有多少种方案？<br>样例输出：2</p></li><li><p>H<br>给定N个相同的球，放进M个相同的盒子，盒子不允许为空，有多少种方案？<br>样例输出：1</p></li></ul><h1>Solutions</h1><p>因为题目顺序有点畸形，按照正常人的思维，如下做题顺序较优：<br><strong>A F E G H D C B</strong></p><p>分别辨析：</p><ul><li><p>A<br>给定N个不同的球，放进M个不同的盒子，盒子允许为空，有多少种方案？<br>[分析] 每个球都可以放在任意个盒子中。<br>[答案] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>⋅</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m\cdot n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></p></li><li><p>F<br>给定N个相同的球，放进M个不同的盒子，盒子不允许为空，有多少种方案？<br>[分析] 题目转化为，将n个球放在一排，在它们之间n-1个空隙选m-1个插棍子将小球分为m部分，将每部分放进盒中，问有几种分法。<br>[答案] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">C^{m−1}_{n−1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1789em;vertical-align:-0.3246em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4337em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>E<br>给定N个相同的球，放进M个不同的盒子，盒子允许为空，有多少种方案？<br>[分析] 与上题类似，但有盒子可以为空，这就意味着两根棍子可以在同一缝隙。将问题转化，先在每个盒子放一个球再来放剩下N个球，与上题类似，将n+m个球放在一排，在它们之间n+m-1个空隙选m-1个插棍子将小球分为m部分。这样使得棍子不重合。<br>[答案] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">C^{m−1}_{n+m−1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1789em;vertical-align:-0.3246em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4337em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>G<br>给定N个相同的球，放进M个相同的盒子，盒子允许为空，有多少种方案？<br>[分析] 设答案为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[n][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>,数值等于有空盒子的情况（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[n][m-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，n个球放在m-1个盒子里）加上没空盒子的情况(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[n-m][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>,每个盒子放一个球，剩下n-m个球随便放)。<br>[递推式] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[n][m]=f[n][m-1]+f[n-m][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span><br>[边界条件] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>0</mn><mtext> </mtext><mi>o</mi><mi>r</mi><mtext> </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">(</mo><mi>j</mi><mo>&gt;</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f[i][j]=1(i=0\ or\ j=1),\ f[i][j]=f[i][i] (j&gt;i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></p></li><li><p>H<br>给定N个相同的球，放进M个相同的盒子，盒子不允许为空，有多少种方案？<br>[分析] 先每个盒放一个球，再如G.<br>[答案] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mtext> </mtext><mo stretchy="false">(</mo><mi>w</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>m</mi><mo>&gt;</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">0\ (when\ m&gt;n),\ f[n-m][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace"> </span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span> (n&gt;=m,f同G中的f)</p></li><li><p>D<br>给定N个不同的球，放进M个相同的盒子，盒子不允许为空，有多少种方案？<br>[分析] 设答案为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[n][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>，答案为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[n-1][m-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> (第n个球放在第m个盒子，其余的放在其余的格子)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mi>m</mi><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">+m f[n-1][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span> (第n个球任意放，乘上n-1个球放在m个盒子中的方案数)，这样能保证一定没有空盒子。<br>[递推式] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>m</mi><mo>∗</mo><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[n][m]=f[n-1][m-1]+m*f[n-1][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span><br>[边界条件] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mi>j</mi><mtext> </mtext><mi>o</mi><mi>r</mi><mtext> </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mn>0</mn><mo stretchy="false">(</mo><mi>j</mi><mo>&gt;</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f[i][j]=1(i=j\ or\ j=1),\ 0(j&gt;i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></p></li><li><p>C<br>给定N个不同的球，放进M个相同的盒子，盒子允许为空，有多少种方案？<br>[分析] 与D有联系，为n个盒子放在1~m个盒子的方案数的总和<br>[答案] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\sum_{i=1}^m f[n][i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span></p></li><li><p>B<br>给定N个不同的球，放进M个不同的盒子，盒子不允许为空，有多少种方案？<br>[分析] 与D有联系，为n个盒子放在1~m个盒子的方案数的总和成上m个盒子的排列总数<br>[答案] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">!</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mi>f</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">n!\sum_{i=1}^mf[n][i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mord mathnormal">n</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> (f同D中的f)</p></li></ul>]]></content>
    
    
    <summary type="html">来自朱全民组合数学八题</summary>
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="组合数学" scheme="http://codeplay0314.com/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="递推" scheme="http://codeplay0314.com/tags/%E9%80%92%E6%8E%A8/"/>
    
    <category term="OI" scheme="http://codeplay0314.com/tags/OI/"/>
    
  </entry>
  
  <entry>
    <title>数据结构 | 图论专题总结</title>
    <link href="http://codeplay0314.com/articles/2015-06-18/graph/"/>
    <id>http://codeplay0314.com/articles/2015-06-18/graph/</id>
    <published>2015-06-18T04:00:00.000Z</published>
    <updated>2015-06-18T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>P.S. 这篇主要是自己记记玩玩的，可能只有我一个人看的懂…</p><p>图论就这么浩浩荡荡搞了一个多星期…感觉很一般。<br>随着专题并没有什么思路，这几天跟着大白皮过了一遍，那就随着这个思路再过一遍知识点，复习一遍经典题。</p><p>图的一些基础概念无需多说。而图的应用中，最直接的就是搜索。这里重点提及一下隐式图搜索，说白了，就是把题中给定的情况，分离出多种状态，在各个状态中连上边权适合的边，以将其转化成一个图论问题。这种方法的应用非常广泛，一些特性也很值得挖掘。<br><code>[UVa 10047 The Motocycle]</code> 朝向和底层颜色构成状态。<br><code>[LA 4255 Guess]</code> 转化为前缀和，做拓扑。<br>其实这几次考试中也出现了几次隐式图搜索，但当时并不知道= =</p><h2 id="深度优先遍历">深度优先遍历</h2><p>深度优先遍历本身是种暴力，也可以计算连通分量等，然而搭配上时间戳DFN和LOW，就变得很神奇了。分别来说：<br>无向图。无向图的割顶LOW值≥DFN，据此线性时间可找出所有割顶，同时，若割顶的儿子只能连回自己，那割顶与儿子之间的路则为桥；双连通分量，点-双连通分量即常说的双连通分量，指任意两点存在点不相同的路径，边-双连通分量指意两点存在边不相同的路径，可以看出，两个点-双连通分量之间至多有一个公共点；如何求。点-双连通分量：类似于Tarjan,但是把边加入栈，当后代的Low值≥DFN时退栈直到当前边，则退出栈的这些边连接的点属于一个点- 双连通分量，边-双连通分量：更简单，删掉所有桥，剩下的连通块分别属于同一个边-双连通分量。<br><code>[LA 5135 井下矿工]</code> 对于连通分量性质的考察比较全面。<br>有向图。强连通分量（SCC）,可用Kosaraju或Tarjan，不再赘述，常用于缩点。<br><code>[LA 4287 等价性证明]</code> 得到一个有趣的性质：使一个DAG成为强连通分量的最小边数为min(入度为0点数，出度为0点数)。</p><h2 id="2-SAT">2-SAT</h2><p>图论的构造类也非常有意思，但做题少没办法说出些什么。另外，相关的一些知识，如仙人掌也有所涉猎，再复习下2-SAT:</p><p>问题的定义见书，简单来说，就是如果a发生将导致b的发生，就连接a–&gt;b，运用黑白点标记来求解。<br>以上问题，虽然理论知识是懂了，但题目并是做的很少，以后有时间可以专门做一做，也可以不定时做一做巩固。</p><p>下面说讲课的这三个专题。</p><h2 id="生成树">生成树</h2><p>（直接复制的前几天的一篇Dairy）我从一个月前接到讲课的任务，不知怎么就选了最小生成树，自己开始搞后，其实发现有很多东西，我适当的加深了难度，然后自己也看了很多题，应该是学的可以。然而我自己懂了之后，发现又两个很严重的问题：我并是没有打过一道题目，而且我并没有想好怎么讲课。其实后面打一本通的时候发现很好打，于是就决定跟进度同步，一起打了。然后就是讲课的问题，自认为ppt上的思路很清晰了，然后主要就做了做特效，做了很久了，之后也没去管它。到今天讲课的时候我发现忘掉好多东西了…应该再看一看的，尤其是开始两道例题，第一问我题目都忘得差不多了，第二问我是也没有太明白，当时也没太管，不过知道它的思路，我就这么强行口糊下去了，之后也口糊了不少地方…总之算比较失败把这次…然而其实我自认为表达能力是比较强的… 然后经常就是某个人问题目问别人听不明白问我就明白了…然而这次主要的问题大概就是实在那几天没怎么准备吧…<br>对于最小生成树的问题，其实很多都是从性质出发衍生出的问题，若是能深度挖掘最小生成树的一些特殊性质，题目应该很好做。<br><code>[BZOJ 1601 灌水]</code> 有种很机智的做法，锻炼思维。</p><h2 id="最短路">最短路</h2><p>非常明确简单的思路，应用和变化也很多。四个算法都用得到，问题类型有多源最短路，单源最短路，K短路，传递闭包，查分约束，有时配上简单枚举，常用于隐式图搜索。<br>掌握的都差不多（除K短路），主要还是缺乏练习，以后要通过大量题目来巩固。<br><code>[UVa 11374 机场快线]</code> 简单题竟然自己没想出来，立起来提个醒。<br><code>[LA 4080 战争和物流]</code> 挖掘最短路树性质。<br><code>[POJ　Intervals]</code> 查分约束经典题。<br><code>[UVa 11478]</code> 更机智的查分约束。<br><code>[UVa 11090]</code> 模型和上题差不多但做的事并不相同。</p><h2 id="拓扑排序">拓扑排序</h2><p>还是比较扎实，很多题1A。但对更深层次的应用不熟，比如判负环，可以判断DAG上任意两点是否单向可达，虽然一说就懂，但是还是想不到sad…像什么反向拓扑序，完全不符合正常人的思维啊…<br><code>[HNOI 2015 Dishes]</code> 经典题<br><code>[HDU 3424 Triangle LOVE]</code> 有趣的性质<br><code>[POJ 2762 Going from u to v … to u?]</code> 判断DAG上任意两点是否单向可达<br>图论的这些题与DAG,DP也都结合紧密。</p><h2 id="其他">其他</h2><p>原准备涉猎一点二分图和网络流，然而急急忙忙开始数学，也只好先标个签以后再说。<br>二分图和匹配其实看完一半了，判断就是是否有奇圈（定义），或黑白染色。<br>其他也没什么好讲的了，主要还是做题，巩固。</p>]]></content>
    
    
    <summary type="html">这篇主要是自己记记玩玩的，可能只有我一个人看的懂…</summary>
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="algorithm" scheme="http://codeplay0314.com/tags/algorithm/"/>
    
    <category term="专题总结" scheme="http://codeplay0314.com/tags/%E4%B8%93%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    <category term="data structure" scheme="http://codeplay0314.com/tags/data-structure/"/>
    
    <category term="graph" scheme="http://codeplay0314.com/tags/graph/"/>
    
    <category term="BFS" scheme="http://codeplay0314.com/tags/BFS/"/>
    
    <category term="DFS" scheme="http://codeplay0314.com/tags/DFS/"/>
    
    <category term="2-SAT" scheme="http://codeplay0314.com/tags/2-SAT/"/>
    
    <category term="Shortest Path" scheme="http://codeplay0314.com/tags/Shortest-Path/"/>
    
    <category term="Topo" scheme="http://codeplay0314.com/tags/Topo/"/>
    
  </entry>
  
  <entry>
    <title>算法 | 哈希专题总结</title>
    <link href="http://codeplay0314.com/articles/2015-05-17/hash/"/>
    <id>http://codeplay0314.com/articles/2015-05-17/hash/</id>
    <published>2015-05-17T04:00:00.000Z</published>
    <updated>2015-05-17T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>哈希专题算是我学的最比较好的专题之一了…感觉。</p><p>我把哈希的操作笼统地总结为，你有很多东西，然后你要get一件新的东西，你需要判断有没有这件东西，然后你再拿下它。</p><p>而哈希的核心问题就集中在如何判断上面。</p><p>先抛开这个问题，我们想另外一件事，哈希可以用来做什么。最简单地，可以用来判重。而依我的最近刷的题加以理解，哈希既可以用来帮助状态记录，也可以用来减少枚举量。</p><p>回到开始的问题，怎样判重。我觉得，所有的哈希都无异于设一个集合，往里面及元素罢了。而最简单的方式就是开一个数组（即桶），记录正整数元素出现的有无。而对于其他类型的元素，我们可以用到一些数据结构比如哈希树，甚至STL中的map，set等。</p><p>我们来讨论各个方式的优劣。开数组无疑是最快捷的，然而它的缺点也同样明显，对于没有出现过的元素，它仍然要开辟同样大的内存，导致空间开销很吃紧，优点是时间调用很快；对于树，代码实现稍显繁琐，而空间复杂度与出现元素个数成正比，但查询速度略差于数组；下面重点谈下STL_map的优缺点：在等同的情况下，map的时空复杂度无疑是占劣势的，而在时空宽裕的情况下，它的优势就同样显现出来了。Map对未出现的元素并不开辟空间，这也就意味着，在某些情况下，map的空间甚至可以达到更优。而在另一些情况下，map的时间（并不是时间复杂度）也会达到更优，如对string处理的时间优于一般的字符串处理。另外两个显而易见的优点，一是可以做到0冲突，二是实现起来也和数组一样方便。所以，我们并不能一味地排斥STL,选择更优的算法而不是更高端的算法。</p><p>话说回来，我们要考虑如何将现有的参量转化为可记录在集合（Hash表）中的元素，暂且列举常见的几大类（其实大都可以用map，下面不再另外进行讨论）：<br>大整数 直接对大素数取余<br>状态 常见于广搜问题中(如八数码/立体八数码(UVa 1604))，可以把状态转化为大整数<br>字符串 转化为多进制数<br>特殊整数_全排列 康拓展开及其逆运算</p><p>不难发现，最方便的方法其实都是将元素转化为易于处理的数字。而这带来一个很大的问题，数字一大，数组下标不够用了怎么办呢—-前面已经提到，可以取模。而取了模，不同的元素有可能会具有相同的哈希值，这时候我们就需要一些技术，类如开放寻址和拉链。另外在空间允许的情况下，可以在相同的哈希位值上开放更多的“辅助数组”，记录更多的元素特征以防止冲突。如[POJ2000 Squares]，由一条对角线确定一个正方形，两点确定一条直线，可以记录对角线的顶点的坐标来判断冲突。同时也要注意，辅助数组并不是多多益善，最好用尽量少的特征来描述状态，如这题，由|x|,|y|&lt;20000，我们可以把一个顶点的坐标记录在一个int上，把y累在x之后，即 point=“x*100000+y[” (23333,6666)-=“”&gt;233336666]，当然要注意负数的处理。这样，可以将四个辅助数组缩减到两个。<br>可见，哈希的主要难点集中在空间和时间的优劣上，事实上，很多哈希题目在暴力情况下的时间和空间是有冲突的，即两点只能取其一，所以需要一些解决办法。某些情况下，改变枚举方式可达到空间时间更优。简单的如[POJ 1840 Eqs],另外如[CodeVS1306广播操的游戏]，使用map，若把所有子串直接push进去直接MLE，而如果每次分别枚举相同长的子串，分别进行哈希，不但可以减少枚举量，每个长度for完后对map进行clear，因为并不会和之后的相同了，还使得空间复杂度降低。</p><p>最后再讲一个例子来说明好的枚举也可以有利于哈希:[POJ 1971 Parallelogram Counting].这一题，有种做法枚举3个点确定2条边，由这2条边确定第4的点，再用Hash判断是否存在，但是O(n^3)绝对TLE。后来想到，由平行四边形对角线相互平分，即两条中点相同的线段确定一个平行四边形，只要枚举两点，并记录他们的中点，再Hash搜索这个中点是否出现过就可以进行计数了。</p><p>由此看来，哈希只是一种手段，运用到题目中是很考验想法的。哈希处理最大的难处可能并不在与时间，空间可能出现更大的问题。所以，尽量用精炼的信息代表状态，必要时还需保留逆运算。在空间允许的条件下，尽量避免冲突。</p><p>以上，最后祝大家Hash Hash 愉快—–</p>]]></content>
    
    
    <summary type="html">Hash算法虽然被称为算法，但实际上它更像是一种思想。Hash算法没有一个固定的公式，只要符合散列思想的算法都可以被称为是Hash算法</summary>
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="hash" scheme="http://codeplay0314.com/tags/hash/"/>
    
    <category term="algorithm" scheme="http://codeplay0314.com/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>算法 | KMP算法</title>
    <link href="http://codeplay0314.com/articles/2015-04-19/kmp/"/>
    <id>http://codeplay0314.com/articles/2015-04-19/kmp/</id>
    <published>2015-04-19T04:00:00.000Z</published>
    <updated>2015-04-19T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>概述</h1><p>这是一种神奇的算法——<br>首先解释一下KMP算法是干什么的。<br>你有两个长度不同字符串S、T，它们的长度分别为len1/len2，你要判断T是否为S的子串（即S中是否包含T）。<br>以人类的思维是是这样进行判断的：一位一位比较。然而这样速度太慢了，因为在最坏的情况下你最多可能需要比较进行(len1-len2) * len2次比较。<br>那你有没有思考，为什么会很慢呢?是因为在此过程中，你做了很多重复的工作，而KMP算法就是用来尽量缩减这些重复工作的。</p><p>先举个例子<br>若S = “aaaaaaaaaaab”, T = “aaaaab” 现在逐位进行比较，到第五位时就会失配。<br><img src="/image/posts/kmp/1.jpg" alt=""><br>将T后移，若直接逐位比较，那么又要比较五次才会发现仍会在第五位失配<br><img src="/image/posts/kmp/2.jpg" alt=""></p><p>那么容易发现前四位的比较并不是必要的，为什么呢？我们会发现因为T[1…3] = T[2…4]，即S[1…3] = S[2…4],又已验证S[1…3] = T[1…3],所以S[2…4] = T[1…3]，再进行比较只会浪费时间。</p><p>再来一个更普遍的例子：<br>S = “abaaaababb”, T = “abaab”<br><img src="/image/posts/kmp/3.jpg" alt=""><br>逐位比较，在第五位发现失配，下面可直接作出如下操作：<br><img src="/image/posts/kmp/4.jpg" alt=""><br>使之后直接进行“有用”的第二位操作。</p><p>可能有人会产生疑问，为什么T串要移动到这个位置？我们观察T串会发现，在已进行匹配的五位中，T[1…2] = T[4…5]，我们已发现S[4]与T[4]匹配，而T[1] = T[4]，故可将T[1]移到S[4]直接进行下一步比较。</p><p>下面介绍如何算出后移位数。</p><h1>NEXT数组的计算</h1><p>我们会发现，要后移的位数只与T串有关，找出T串相同的前缀和后缀长度（且不能为自己，想一想，为什么），即可以算出最佳的后移位数。<br>我们用next[x]表示当T的前x位最长相同前缀和后缀的长度，即当T第x位失配时应该后移x - next[x]位。<br>能不能直接求呢？当然可以，但这样同样太慢了，会使得KMP算法的优越性不复存在。<br>那么如何效率算出f数组呢？<br>我们假设已经计算好前7位，且next[7] = 3，现在计算第8位，如图所示<br><img src="/image/posts/kmp/5.jpg" alt=""><br>若此时T[4] = T[8]，可直接求出next[8] = next[7] + 1 = 4<br>然而有时情况并非这样，若T[4]  !=  T[8]<br>那么我们查看next[next[7]]，即next[3]，我们假设next[3] = 2，即T[1…2] = T[2…3]，相应的，我们有T[5…6] = T[6…7]，他们与T[1…2]也相等。<br><img src="/image/posts/kmp/6.jpg" alt=""></p><p>若此时T[3] = T[8]，即T[1…3] = T[6…8]，可直接求出next[8] = next[3]+1 = 3<br>但若T[3]！ = T[8]，我们继续查看next[next[3]],即next[2]</p><p>…（以此类推，进行“前缀的配置”直至配置成功，边界为next[0] = 0）</p><p>至此，你有没有懂next数组的计算原理了呢？多模拟上述过程，加强自己的理解。（*形成自己的理解很重要）<br>下面给出代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Make_Next</span><span class="params">(<span class="keyword">char</span> T[], <span class="keyword">int</span> next[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(T);</span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">0</span>;                                   <span class="comment">//边界</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (k &amp;&amp; T[i] != T[k]) k = next[k<span class="number">-1</span>];   <span class="comment">//上面图示过程，注意k为非负数</span></span><br><span class="line">        <span class="keyword">if</span> (T[i] == T[k]) k++;                     <span class="comment">//进行匹配</span></span><br><span class="line">        next[i] = k;                               <span class="comment">//保存</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据以上思路，我们自然而然的就可以写出整个程序了，在操作中，我们将“串的移动”操作为k指针的移动。下面给出代码参考。然而在继续阅读前，建议读者仿照上述思路先自己手写一遍代码。</p><h1>[Code]</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> next[maxn];</span><br><span class="line"><span class="keyword">char</span> S[maxn], T[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Make_Next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(T);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, k = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">while</span> (k &amp;&amp; T[i] != T[k]) k = next[k<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span> (T[i] == T[k]) k++;</span><br><span class="line">        next[i] = k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len1 = <span class="built_in">strlen</span>(S), len2 = <span class="built_in">strlen</span>(T);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>; i &lt; len1; i++) &#123;</span><br><span class="line">    <span class="keyword">while</span> (k &amp;&amp; S[i] != T[k]) k = next[k];    <span class="comment">//若失配，进行“前缀的配置”</span></span><br><span class="line">        <span class="keyword">if</span> (S[i] == T[k]) k++;</span><br><span class="line">        <span class="keyword">if</span> (k == len2) <span class="keyword">return</span> <span class="literal">true</span>;           <span class="comment">//找到子串，返回真</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; S &gt;&gt; T;</span><br><span class="line">    <span class="built_in">Make_Next</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Find</span>()) cout &lt;&lt; <span class="string">&quot;Yes&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;No&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完成后，相信你已发现制作next数组和查找子串的代码非常相似（这也是KMP算法的神奇之处之一）。你也可以稍微改动一下程序，使得程序输出T在S串中第一次出现的位置或出现的次数（这并不困难）。<br>至此，我们可以分析一下KMP算法的复杂度。我们可以这样看，应变量i和k在运算中不断增加直至达到字符串长度，所以KMP算法的复杂度线性的，已经达到很优。<br>KMP算法的优点在于代码短且复杂度低，而缺点有难于理解和代码容易打错，希望鄙人此文能有助于大家对于这一算法的理解。</p>]]></content>
    
    
    <summary type="html">（KMP算法并不很好理解，请读者在阅读过程中集中精力并有自己的思考）</summary>
    
    
    
    <category term="OI&amp;ACM" scheme="http://codeplay0314.com/categories/OI-ACM/"/>
    
    
    <category term="algorithm" scheme="http://codeplay0314.com/tags/algorithm/"/>
    
    <category term="KMP" scheme="http://codeplay0314.com/tags/KMP/"/>
    
    <category term="string" scheme="http://codeplay0314.com/tags/string/"/>
    
  </entry>
  
</feed>
